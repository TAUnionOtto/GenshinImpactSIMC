#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
import sys
try:
    import numpy as np
except:
    os.system("pip3 install numpy scipy matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple")
    os.system("py "+os.path.dirname(__file__)+"/原神Simc V1.0 源代码.py")
    sys.exit(0);
import os
import sys
import random
import math
import os 
import sys,glob
from tkinter import*
np.set_printoptions(suppress=True)

def relicnom(name,cle):
    X=0
    B=list(str(name))
    L=''
    N=np.size(B)
    for i in range(N):
        L=L+'\\u'+hex(ord(B[i]))[2:]
    Y=L.encode().decode('unicode_escape')
    C=list(str(cle))
    L1=''
    M=np.size(C)
    for i in range(M-N+1):
        for j in range(N):
            L1=L1+'\\u'+hex(ord(C[i+j]))[2:]
        Y1=L1.encode().decode('unicode_escape')
        L1=''
        if Y==Y1:
            X=1
    if X==1 and N>=2:
        return True
    elif N==M:
        if str(name)==str(cle):
            return True
    else:
        return False

    
def cara(level,name,life):
    P=0
    level=int(level)
    life=int(life)
    if life<=0:
        life=0
    if life>=6:
        life=6
    if level!=70 and level!=80:
        level=80
    BH=0
    '基础生命值'
    SH=0
    '附加生命值'
    HR=0
    '百分比生命值'
    BA=0
    '基础攻击力'
    SA=0
    '附加攻击力'
    EDX=np.zeros(8)
    '元素伤害+物理伤害:  火   水   冰   雷   岩   风   草  物'
    '                                [0]  [1] [2]  [3]  [4]  [5]  [6]  [7]'
    ED=0
    '元素伤害'
    AR=0
    '百分比攻击力'
    C=0
    '暴击率'
    CD=0
    '爆伤'
    EM=0
    '元素精通'
    BD=0
    '基础防御力'
    SD=0
    '附加防御力'
    DR=0
    '百分比防御力'
    AD=0
    '平A伤'
    HD=0
    '重击伤'
    E=0
    'E伤'
    Q=0
    'Q伤'
    FDebuff=0
    '火易伤'
    TDebuff=0
    '雷易伤'
    WDebuff=0
    '水易伤'
    IDebuff=0
    '冰易伤'
    VDebuff=0
    '风易伤'
    RDebuff=0
    '岩易伤'
    GDebuff=0
    '草易伤'
    EF=0
    '充能效率'
    ALLD=0
    '全伤'
    speed=0
    '攻速'
    LE=0
    'E冷却百分比'
    LQ=0
    'Q冷却百分比'
    JQ=0
    'Q冷却按秒'
    JE=0
    'E冷却按秒'
    skill=0
    ele=0
    RR=np.zeros((1,20))
    if relicnom(name,'岩王爷岩神摩拉克斯钟离'):
        ele=4
        if level==70 or level==80:
            print('暂时只有试玩中的90级数据')
            BH+=14695
            BA+=251
            EDX[4]+=28.8
            BD+=731
            skill=[41.9,42.4,52.5,58.4,58.4,151,25.6,591,30,12,2.8,2,0.67,1.22,0.95,0.62,0.18,0.43,0.22]
            e2=skill[6]*6
        if life>=1:
            e2=skill[6]*8
            skill[6]*=2
            skill[-9]*=0.5
            skill[-7]*=2
            print('1命 岩者,六合引之为骨  生效，地心创造的岩脊最多可以同时存在2个')  
            if life>=3:
                skill[6]*=1.2
                e2*=1.2
                print('3命 圭璋,瞑仍不移其晖  生效，E+3级')
                if life>=5:
                    skill[7]*=1.2
                    print('5命 苍璧,驱之长昭天理 生效，Q+3级')
        RR=[[4,4,0,0,5,0,0,1,1,0,2,10002,0,0,0,0,0,0,0,0],[3,1,1,0,30,0,1,14,14,0,0,0,0,0,0,0,0,5,3,e2]]
        print(level,'级',life,'命',name,'基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     岩元素伤共',format(EDX[4]/100,'.2%'),'。')
    
    if relicnom(name,'公子达达利亚'):
        ele=1
        if level==70:
            BH+=10025
            BA+=230
            EDX[1]+=14.4
            BD+=623
            skill=[65.3,73.2,87.6,90.2,96.3,115.1,192.1,101,66,56.5,60.5,81.9,87.1,80.4,106.3,530,15,650,15,2.13,1.83,0.75,0.66,0.33,0.83,0.25,0.25,0.23,0.58,0.75,0.3,0.3,0.64,0.23,0.3]
            E1=77
            Q1=150
        if level==80:
            BH+=11561
            BA+=266
            EDX[1]+=21.6
            BD+=719
            E1=88
            Q1=168
            skill=[65.3,73.2,87.6,90.2,96.3,115.1,192.1,101,66,56.5,60.5,81.9,87.1,80.4,106.3,530,15,650,15,2.13,1.83,0.75,0.66,0.33,0.83,0.25,0.25,0.23,0.58,0.75,0.3,0.3,0.64,0.23,0.3]
        RR=[[13,13,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,3,E1],[12,12,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,4,Q1]]
        if life>=1:
            skill[8]=58.8
            print('1命 魔王武装·遏浪  生效。魔王武装·狂澜的冷却时间降低20%。')
            if life>=3:
                skill[6]*=1.2;skill[7]*=1.2;skill[9]*=1.2;skill[10]*=1.2;skill[11]*=1.2;skill[12]*=1.2;skill[13]*=1.2;skill[14]*=1.2;
                E1*=1.2
                RR=[[13,13,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,3,E1],[12,12,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,4,Q1]]
                print('3命 深渊之灾·纷争涡源 生效，魔王武装·狂澜的技能等级提高3级。至多提升至15级。')
                if life>=4:
                    RR=[[13,13,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,3,E1],[12,12,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,4,Q1],[3,0,1,0,30,0,1,10,1,4,0,0,0,0,0,0,0,2,3,E1]]
                    print('4命 深渊之灾·凝水盛放 生效 每4秒，场上存在达达利亚自身施加的断流效果时，触发对应效果，独立CD。')
                    if life>=5:
                        skill[15]*=1.2;skill[17]*=1.2;Q1*=1.2
                        RR=[[13,13,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,3,E1],[12,12,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,4,Q1],[3,0,1,0,30,0,1,10,1,4,0,0,0,0,0,0,0,2,3,E1]]
                        print('5命 极恶技·斩水斩雨 生效 大招+3。')
                        if life>=6:
                            RR=[[13,13,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,3,E1],[12,12,1,0,1.5,1.5,1,1,1,0,0,0,0,0,0,0,0,2,4,Q1],[3,0,1,0,30,0,1,10,1,4,0,0,0,0,0,0,0,2,3,E1],[12,12,0,0,10,0,0,0,1,0,0,0,-2,100,0,0,0,0,0,0]]
                            print('6命 极恶技·天使灭尽  生效，开大E冷却清零，进入弓箭状态生效。')
        print(level,'级',life,'命',name,'基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     水元素伤共',format(EDX[1]/100,'.2%'),'。')
                
    if relicnom(name,'天权星凝光'):
        ele=4
        if level==70:
            BH+=7561
            BA+=164
            EDX[4]+=24
            BD+=443
            skill=[70,218,288,12.58,109,12.58,2,1.42,0.75,0.75]
            RR=[[1,10,1,0,50,0,1,0,3,0,0,0,0,0,0,0,0,5,2,62]]
        if level==80:
            BH+=7996
            BA+=174
            EDX[4]+=30
            BD+=468
            skill=[78.4,244,323,12.58,122,12.58,2,1.42,0.75,0.75]
            RR=[[1,10,1,0,50,0,1,0,3,0,0,0,0,0,0,0,0,5,2,69.4]]
        if life>=2:
            skill[3]=6.5
            print('2命 璇玑合璧镇昆仑 生效，视为E技能6秒CD')  
            if life>=3:
                skill[4]*=1.2
                print('3命 星罗宿列天权临  生效，Q+3级')
                if life>=5:
                    skill[2]*=1.2
                    print('5命 琼屏千扇正天衡 生效，E+3级')
                    if life>=6:
                        RR=[[1,10,1,0,50,0,1,0,3,0,0,0,0,0,0,0,0,5,2,69.4],[4,10,1,0,50,0,1,7,7,0,0,0,0,0,0,0,0,5,2,69.4]]
                        print('6命 七星璨璨凝流光 生效，')
        print(level,'级',life,'命凝光基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     岩元素伤共',format(EDX[4]/100,'.2%'),'。')
    
    if relicnom(name,'女仆诺艾尔'):
        ele=4
        if level==70:
            BH+=9325
            BA+=148
            BD+=617
            DR+=15
            skill=[101,93.8,110,145,150,200,0.5,13.9,24,1.9,0.55,1.12,0.92,0.8,0.58]
            RR=[[1,6,0,0,50,0,0,0,4,0,0,0,-4,1,0,0,0,0,0,0],[4,0,0,0,13.9,0,0,0,1,0,2,10001,0,0,0,0,0,0,0,0]]
        if level==80:
            BH+=9862
            BA+=179
            BD+=672
            DR+=22.5
            skill=[115,107,125,165,168,224.1,0.56,13.9,24,1.9,0.55,1.12,0.92,0.8,0.58]
            RR=[[1,6,0,0,50,0,0,0,4,0,0,0,-4,1,0,0,0,0,0,0],[4,0,0,0,13.9,0,0,0,1,0,2,10001,0,0,0,0,0,0,0,0]]
        if life>=2:
            HD+=15
            print('2命 旋风女仆 生效，重击伤害增加',format(15/100,'.2%'))
            if life>=3:
                skill[4]=skill[4]*1.2
                print('3命 女仆不会受伤  生效，E+3级')
                if life>=4:
                    RR=[[1,6,0,0,50,0,0,0,4,0,0,0,-4,1,0,0,0,0,0,0],[3,1,1,0,20,0,1,1,1,0,0,0,0,0,0,0,0,5,3,400],[4,0,0,0,13.9,0,0,0,1,0,2,10001,0,0,0,0,0,0,0,0]]
                    print('4命 之后会扫干净的  生效，护心铠在效果结束时，或因伤害破碎时，会对周围的敌人造成400％攻击力的岩元素伤害')
                    if life>=5:
                        skill[5]=skill[5]*1.2
                        skill[6]=skill[6]*1.2
                        print('5命 骑士团扫除专家 生效，大招+3级')
                        if life>=6:
                            skill[6]+=0.5
                            print('6命 要一尘不染才行 生效，大招防御转攻击比率增加',format(50/100,'.2%'))
        print(level,'级',life,'命诺艾尔基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     防御力加成',format(DR/100,'.2%'),'。')

    if relicnom(name,'岩主'):
        ele=4
        if level==70:
            BH+=7561
            BA+=164
            BD+=443
            AR+=12
            skill=[56.9,55.6,57.8,74.6,90.5,298,740,6.43,15.65,1.07,1.4,0.52,0.7,0.68,0.55,0.28]
        if level==80:
            BH+=7996
            BA+=174
            BD+=468
            AR+=18
            skill=[64.6,63.1,77,84.8,106,347,828,6.43,15.65,1.07,1.4,0.52,0.7,0.68,0.55,0.28]
        RR=[[14,14,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,5,0,60]]
        if life>=1:
            RR=[[14,14,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,5,0,60],[4,0,0,0,15,0,0,0,1,0,10,10,0,0,0,0,0,0,0,0]]
            print('1命 巍然的青岩 生效，队伍中角色处于岩潮叠嶂的岩嶂包围中时，暴击率提升10%')
            if life>=2:
                skill[5]=skill[5]*2
                print('2命 不稳的熔岩  生效，星陨剑的荒星被摧毁时会再度发生爆炸，造成等同于星陨剑伤害的额外岩元素范围伤害')
                if life>=3:
                    skill[6]=skill[6]*1.2
                    print('3命 八方之岩  生效，Q+3级')
                    if life>=5:
                        skill[5]=skill[5]*1.2
                        print('5命 天坠之岩 生效，E+3级')
                        if life>=6:
                            RR=[[14,14,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,5,0,60],[4,0,0,0,20,0,0,0,1,0,10,10,0,0,0,0,0,0,0,0]]
                            print('6命 永世的磐岩 生效，岩潮叠嶂的岩嶂持续时间延长5秒')
        print(level,'级',life,'命岩主基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     攻击力加成共',format(AR/100,'.2%'),'。')

    if relicnom(name,'风主'):
        ele=5
        if level==70:
            BH+=7561
            BA+=164
            BD+=443
            AR+=12
            skill=[56.9,55.6,57.8,74.6,90.5,366,1188,10,15,1.9,2.65,0.52,0.7,0.68,0.55,0.28]
        if level==80:
            BH+=7996
            BA+=174
            BD+=468
            AR+=18
            skill=[64.6,63.1,77,84.8,106,410,1329.3,10,15,1.9,2.65,0.52,0.7,0.68,0.55,0.28]
        RR=[[14,14,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,6,0,60]]
        if life>=3:
            skill[6]=skill[6]*1.2
            print('3命  天地的刚风  生效，Q+3级')
            if life>=5:
                skill[5]=skill[5]*1.2
                print('5命 群星的涡风  生效，E+3级')
        print(level,'级',life,'命风主基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     攻击力加成共',format(AR/100,'.2%'),'。')

    
    if relicnom(name,'雷泽喂不饱的狼'):
        ele=3
        if level==70:
            BH+=9241
            BA+=180
            EDX[7]+=15
            BD=580
            skill=[118,101,127,249,5.5,200,20.58,1.17,1.17,0.55,0.87,0.58]
            RR=[[4,0,0,0,16.75,0,0,0,1,0,0,0,-1,32,0,0,0,0,0,0],[4,1,1,0,16.75,0,1,100,100,0,0,0,0,0,0,0,0,4,4,0.3*(skill[0]+skill[1]+skill[2])/3],[4,4,0,0,0,0,0,0,1,0,0,0,-2,100,0,0,0,0,0,0]]
        if level==80:
            BH+=10602
            BA+=207
            EDX[7]+=22.5
            BD+=665
            skill=[132,114,142,279,5.5,224,20.58,1.17,1.17,0.55,0.87,0.58]
            RR=[[4,0,0,0,16.75,0,0,0,1,0,0,0,-1,36,0,0,0,0,0,0],[4,1,1,0,16.75,0,1,100,100,0,0,0,0,0,0,0,0,4,4,0.336*(skill[0]+skill[1]+skill[2])/3],[4,4,0,0,0,0,0,0,1,0,0,0,-2,100,0,0,0,0,0,0]]
        if life>=1:
            ALLD+=10
            print('1命 狼性 生效：视为全程 ',format(10/100,'.2%'),'全伤害加成')
            if life>=2:
                C+=3
                print('2命 压制 生效：视为全程 ',format(3/100,'.2%'),'爆率加成')
                if life>=3:
                    RR=[[4,0,0,0,16.75,0,0,0,1,0,0,0,-1,39,0,0,0,0,0,0],[4,1,1,0,16.75,0,1,100,100,0,0,0,0,0,0,0,0,4,4,0.408*(skill[0]+skill[1]+skill[2])/3],[4,4,0,0,0,0,0,0,1,0,0,0,-2,100,0,0,0,0,0,0]]
                    skill[5]+=48
                    print('3命 兽魂 生效：大招 雷牙+3 ')
                    if life>=5:
                        skill[3]+=60
                        print('5命 利爪 生效：E技能 利爪+3 ')
                        if life>=6:
                            RR=[[4,0,0,0,16.75,0,0,0,1,0,0,0,-1,39,0,0,0,0,0,0],[4,1,1,0,16.75,0,1,100,100,0,0,0,0,0,0,0,0,4,4,0.408*(skill[0]+skill[1]+skill[2])/3],[4,4,0,0,0,0,0,0,1,0,0,0,-2,100,0,0,0,0,0,0],[0,1,1,0,10,10,1,1,1,0,0,0,0,0,0,0,0,4,0,100]]
                            print('6命 天狼 生效：每十秒普通攻击触发落雷，造成1倍面板雷元素伤害')
        print(level,'级',life,'命雷泽基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     物理伤害提升共',format(EDX[7]/100,'.2%'),'。')
        
    if relicnom(name,'迪卢克卢老爷卢姥爷正义人卢锅巴暗夜英雄'):
        ele=0
        if level==70:
            BH+=10576
            BA+=272
            C+=9.6
            BD+=652
            skill=[115,112,126,171,118,122,161,10.58,810,12.58,3,1.28,0.75,0.66,1.15,0.78,1.1,0.55]
            RR=[[4,0,0,0,15.58,0,0,0,1,0,-2,20,0,0,0,0,1,0,0,0]]
        if level==80:
            BH+=11453
            BA+=296
            C+=14.4
            BD+=692
            skill=[130,127,144,195,132,137,180,10.58,908,12.58,3,1.28,0.75,0.66,1.15,0.78,1.1,0.55]
            RR=[[4,0,0,0,15.58,0,0,0,1,0,-2,20,0,0,0,0,1,0,0,0]]
        if life>=1:
            AR+=7.5
            print('1命 罪罚裁断 生效，视为全程伤害加成',format(7.5/100,'.2%'))
            if life>=2:
                RR=np.row_stack((RR,[[5,0,0,0,10,1.5,0,0,3,0,3,10,-1,5,0,0,0,0,0,0]]))
                print('2命 炙热余烬 生效，迪卢克受到伤害时，攻击力提高10％，攻击速度提高5％，持续10秒。该效果至多叠加3层。每1.5秒只能触发一次')
                if life>=3:
                    skill[4]*=1.2;skill[5]*=1.2;skill[6]*=1.2
                    print('3命  钢铁炽焰 生效，逆焰之刃E的技能等级提高3级')
                if life>=4:
                    RR=np.row_stack((RR,[[3,3,0,0,4,0,0,0,1,2,0,0,3,40,0,0,0,0,0,0]]))
                    print('4命 流火焦灼   生效，释放逆焰之刃的2秒后，下一段逆焰之刃的伤害提高40％，持续2秒。')
                    if life>=5:
                        skill[8]*=1.2
                        print('5命  昭告黎明的火之鸟  生效，黎明R的技能等级提高3级')
                        if life>=6:
                            RR=np.row_stack((RR,[[3,1,0,0,6,0,0,2,2,0,0,0,1,30,0,0,0,0,0,0],[3,1,0,0,6,0,0,2,2,0,0,0,-1,30,0,0,0,0,0,0]]))
                            print('6命 清算黑暗的炎之剑 生效，释放逆焰之刃会使接下来6秒内的2次普通攻击的攻击速度提升30％，造成伤害提高30％。此外，逆焰之刃不再会中断前两段普通攻击的连击段数。')
        print(level,'级',life,'命迪卢克基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'   暴击率',format(C/100,'.2%'))

    if relicnom(name,'香菱'):
        ele=0
        if level==70:
            BH+=8401
            BA+=174
            EM+=48
            AR+=8.3
            BD+=517
            skill=[53.8,53.9,66.6,72,90.9,156,556,1737,12,20,2,0.72,1.28,0.62,0.92,0.7,0.48,0.4]
        if level==80:
            BH+=9638
            BA+=199
            AR+=8.3
            EM+=72
            BD+=593
            skill=[61.1,61.3,75.8,82,103,177,624,1947,12,20,2,0.72,1.28,0.62,0.92,0.7,0.48,0.4]
        if life>=2:
            RR=[[14,14,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,1,0,75]]
            print('2命 大火宽油 生效，普攻最后一下附带伤害',format(75/100,'.2%'))
            if life>=3:
                skill[7]=skill[7]*1.2
                print('3命 武火急烹  生效，E+3级')
                if life>=4:
                    skill[7]=skill[7]*(0.8*1.4+0.2)
                    print('4命 文火慢煨  生效，旋火轮的持续时间延长40％')
                    if life>=5:
                        skill[6]=skill[6]*1.2
                        print('5命 锅巴凶猛 生效，大招+3级')
                        if life>=6:
                            RR=[[14,14,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,1,0,75],[4,0,0,0,16,0,0,0,1,0,-2,15,0,0,0,0,0,0,0,0]]
                            print('6命 大龙卷旋火轮 生效，旋火轮持续期间，队伍中所有角色获得15％火元素伤害加成。')
        print(level,'级',life,'命香菱基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     元素精通共',EM)

    if relicnom(name,'可莉'):
        ele=0
        if level==70:
            BH+=7870
            BA+=238
            EDX[0]+=14.4
            BD+=470
            HD+=25
            skill=[90.2,78,112,197,447,906.1,20.58,15.17,2.4,1.1,1.25,0.85,0.57,0.32]
        if level==80:
            BH+=9076
            BA+=274
            EDX[0]+=21.6
            BD+=542
            HD+=25
            skill=[101,87.4,126,220,500.2,1015,20.58,15.17,2.4,1.1,1.25,0.85,0.57,0.32]
        if life>=1:
            RR=[[0,7,1,0,10,0,1,0,1,0,0,0,0,0,0,0,0,1,0,skill[5]/17*0.25*1.2]]
            print('1命 连环轰隆 生效，攻击与施放技能时，有几率召唤火花轰击敌人，造成相当于轰轰火花（大招单段）攻击伤害120％的伤害')
            if life>=3:
                skill[4]=skill[4]*1.2
                print('3命 可莉特调   生效，E+3级')
                if life>=4:
                    RR=[[0,7,1,0,10,0,1,0,1,0,0,0,0,0,0,0,0,1,0,skill[5]/19*0.25*1.2],[4,1,1,0,20,0,1,0,1,10,0,0,0,0,0,0,0,1,0,555]]
                    print('4命 一触即发  生效，如果在轰轰火花持续期间内退场，会引发爆炸，造成555％攻击力的火元素范围伤害')
                    if life>=5:
                        skill[5]=skill[5]*1.2
                        RR=[[0,7,1,0,10,0,1,0,1,0,0,0,0,0,0,0,0,1,0,skill[5]/19*0.25*1.2],[4,1,1,0,20,0,1,0,1,10,0,0,0,0,0,0,0,1,0,555]]
                        print('5命 轰击之星 生效，大招+3级')
                        if life>=6:
                            RR=[[0,7,1,0,10,0,1,0,1,0,0,0,0,0,0,0,0,1,0,skill[5]/19*0.25*1.2],[4,1,1,0,20,0,1,0,1,10,0,0,0,0,0,0,0,1,0,555],[4,0,0,0,25,0,0,0,1,0,-2,10,0,0,0,0,0,0,0,0]]
                            print('6命  火力全开  生效，在轰轰火花的状态下，会持续为队伍中所有角色（不包括可莉自己）恢复元素能量（每3秒跳1次，共跳3次，回复约9点）；施放轰轰火花后的25秒内，队伍中所有角色获得10％火元素伤害加成')
        print(level,'级',life,'命可莉基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     火元素伤害',format(EDX[0]/100,'.2%'))

    
    if relicnom(name,'侦查骑士安柏兔兔伯爵'):
        ele=0
        EEE=1
        if level==70:
            BH+=7309
            BA+=175
            BD+=464
            AR+=12
            skill=[46.2,46.2,59.4,60.5,75.9,155,154,632,15,12,1.1,0.78,2,0.57,0.75,0.63,0.35,0.27]
            RR=[[4,4,0,0,1,0,0,0,1,0,10,10,0,0,0,0,0,0,0,0]]
        if level==80:
            BH+=8385
            BA+=197
            BD+=532
            AR+=18
            skill=[52.5,52.5,63.2,64.4,80.7,164,175,708,15,12,1.1,0.78,2,0.57,0.75,0.63,0.35,0.27]
            RR=[[4,4,0,0,1,0,0,0,1,0,10,10,0,0,0,0,0,0,0,0]]
        if life>=2:
            EEE=2.84
            print('2命 一触即发 生效，兔兔伯爵进行了全新改良！满蓄力瞄准射击命中兔兔伯爵脚部时，能直接引爆兔兔伯爵。通过这种方式主动引爆兔兔伯爵时，会额外造成200％伤害')
            if life>=3:
                skill[7]=skill[7]*1.2
                print('3命 烧起来啦!   生效，Q+3级')
                if life>=4:
                    skill[8]=skill[8]*0.8
                    print('4命 才不是普通的布偶  生效，爆弹玩偶的冷却时间减少20%,并增加1次可使用次数')
                    if life>=5:
                        skill[6]=skill[6]*1.2
                        print('5命 是兔兔伯爵! 生效，E+3级')
                        if life>=6:
                            RR=[[4,4,0,0,1,0,0,0,1,0,10,10,0,0,0,0,0,0,0,0],[4,0,0,0,10,0,0,0,1,0,3,15,0,0,0,0,0,0,0,0]]
                            print('6命  疾如野火   生效，使用箭雨后的10秒内，队伍中所有角色的移动速度提升15%,攻击力提升15%')
        print(level,'级',life,'命安柏基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     攻击力百分比',format(AR/100,'.2%'))
        skill[6]=skill[6]*EEE
        
    if relicnom(name,'点赞哥班尼特'):
        ele=0
        if level==70:
            BH+=9577
            BA+=148
            BD+=596
            EF+=13.4
            AR+=78
            skill=[57,54.7,69.9,76.3,92,172,220,291,0.7,4.28,6.92,15.65,0.95,2.33,0.93,0.92,0.9,0.85,0.52,0.38]
            san=155.25
            RR=[[4,3,0,0,12.95,0,0,10,10,0,0,0,-2,42,0,0,0,0,0,0],[4,0,0,0,12.95,0,0,0,1,0,2,10000,0,0,0,0,0,0,0,0]]
        if level==80:
            BH+=9060
            BA+=169
            BD+=684
            AR+=78
            EF+=20.1
            san=174.15
            RR=[[4,3,0,0,12.95,0,0,10,10,0,0,0,-2,42,0,0,0,0,0,0],[4,0,0,0,12.95,0,0,0,1,0,2,10000,0,0,0,0,0,0,0,0]]
            skill=[64.8,62.1,79.4,86.8,105,193,247,326,0.78,4.28,6.92,15.65,0.95,2.33,0.93,0.92,0.9,0.85,0.52,0.38]
        if life>=1:
            skill[8]+=0.2
            print('1命 冒险憧憬 生效，美妙旅程的攻击力提升效果不再有血量限制，数值上追加班尼特基础攻击力的20%')
            if life>=3:
                san=san*1.2;skill[5]=skill[5]*1.2;skill[6]=skill[6]*1.2;
                print('3命  火热激情 生效，E+3级')
                if life>=4:
                    skill[6]+=san
                    skill[-7]+=0.44
                    print('4命 热情不灭 生效，施放一段蓄力的热情过载时，在技能第二段攻击中进行普通攻击，可以施放额外的追击。追击的伤害等同于第二段攻击的135%')
                    if life>=5:
                        skill[7]=skill[7]*1.2
                        skill[8]+=0.2
                        print('5命 开拓的心魂   生效，Q+3级')
                        if life>=6:
                            RR=[[4,3,0,0,12.95,0,0,10,10,0,0,0,-2,42,0,0,0,0,0,0],[4,0,0,0,12.95,0,0,0,1,0,2,10000,0,0,0,0,0,0,0,0],[4,0,0,0,12.95,0,0,0,1,0,-2,15,0,0,0,0,1,0,0,0]]
                            print('6命 烈火与勇气   生效，处在美妙旅程领域内的单手剑、双手剑、长柄武器角色获得15％火元素伤害加成，并将普通攻击与重击伤害转为火元素')
        print(level,'级',life,'命班尼特基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     充能效率',format(EF/100,'.2%'))

    if relicnom(name,'莫娜'):
        ele=1
        if level==70:
            BH+=7694
            BA+=219
            BD+=500
            EF+=16
            skill=[47,45,56,70.2,187,326,553,12.5,15,2,0.83,1.77,0.63,0.7,0.43,0.43]
        if level==80:
            BH+=9076
            BA+=253
            BD+=576
            EF+=24
            skill=[52.6,50.4,62.7,78.6,210,365.2,619,12.5,15,2,0.83,1.77,0.63,0.7,0.43,0.43]
        if life>=2:
            RR=[[0,1,1,0,5,5,1,1,1,0,0,0,0,0,0,0,0,2,2,skill[4]]]
            print('2命 星月的连珠 生效，普通攻击命中时，有20%的几率自动施放一次重击。该效果每5秒只能触发一次')
            if life>=3:
                skill[6]=skill[6]*1.2;
                print('3命  不休的天象 生效，Q+3级')
                if life>=4:
                    RR=[[0,1,1,0,5,5,1,1,1,0,0,0,0,0,0,0,0,2,2,skill[4]],[4,7,0,0,4.5,0,0,10,10,0,10,15,0,0,0,0,0,0,0,0]]
                    print('4命 灭绝的预言 生效，队伍中所有角色攻击处于星异状态下的敌人时，暴击率提升15%')
                    if life>=5:
                        skill[5]=skill[5]*1.2
                        print('5命 命运的嘲弄   生效，E+3级')
        print(level,'级',life,'命莫娜基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     充能效率',format(EF/100,'.2%'))

    if relicnom(name,'芭芭拉内鬼歌姬闪耀偶像'):
        ele=1
        if level==70:
            BH+=7561
            BA+=123
            BD+=517
            HR+=12
        if level==80:
            BH+=8674
            BA+=141
            BD+=593
            HR+=18
        if life>=2:
            EDX[1]+=15
            print('2命 元气迸发   生效，视为水元素伤害增加',format(C/100,'.2%'))
        print(level,'级',life,'命芭芭拉基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     生命值加成',format(HR/100,'.2%'))

    if relicnom(name,'行秋'):
        ele=1
        if level==70:
            BH+=7897
            BA+=178
            BD+=585
            AR+=12
            EDX[1]+=20
            skill=[59.6,60.9,73,71.6,91.8,449,67.8,21,20,0.6,1.62,1.2,0.63,0.87,0.47,0.3]
        if level==80:
            BH+=9060
            BA+=179
            BD+=671
            AR+=18
            EDX[1]+=20
            skill=[67.8,69.3,83,81.4,104.2,503,76,21,20,0.6,1.62,1.2,0.63,0.87,0.47,0.3]
        qt=15;qn=14;qp=2.5;
        if life>=2:
            qt=18;qn=17;
            print('2命 天青现虹 生效，古华剑·裁雨留虹的持续时间延长3秒')
            if life>=3:
                skill[6]=skill[6]*1.2
                print('3命 织诗成锦 生效，Q+3级')
                if life>=4:
                    '在输出循环里定义该乘算效果'
                    print('4命  孤舟斩蛟 生效，在古华剑·裁雨留虹效果持续期间，古华剑·画雨笼山造成的伤害提升50％')
                    if life>=5:
                        skill[5]=skill[5]*1.2
                        print('5命 雨深闭门 生效，E+3级')
                        if life>=6:
                            qp=3.24
                            print('6命 万文集此   生效，古华剑·裁雨留虹每发动2次剑雨攻击，就大幅增强下一次剑雨攻击')
        print(level,'级',life,'命行秋基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     攻击力加成',format(AR/100,'.2%'))
        RR=[[4,1,1,0,qt,0,1,qn,qn,0,0,0,0,0,0,0,0,2,4,qp*skill[6]]]
        
    if relicnom(name,'风神卖唱的温蒂温迪巴巴托斯'):
        ele=5
        if level==70:
            BH+=8058
            BA+=202
            BD+=512
            EF+=24
            skill=[52.2,56.8,67,66.6,64.8,90.8,345,893*1.5,6.38,16,1.73,1.13,0.9,0.53,0.4,0.82,0.33,0.48]
        if level==80:
            BH+=9292
            BA+=232
            BD+=590
            EF+=32
            skill=[59.2,64.5,76.1,75.8,73.6,103,386,999.4*1.5,6.38,16,1.73,1.13,0.9,0.53,0.4,0.82,0.33,0.48]
        if life>=3:
            skill[7]=skill[7]*1.2
            print('3命 千风的诗篇  生效，Q+3级')
            if life>=4:
                EDX[5]+=25
                print('4命 自由的凛风  生效，风元素伤害增加',format(EDX[5]/100,'.2%'))
                if life>=5:
                    skill[6]=skill[6]*1.2
                    print('5命 高天的协奏  生效，E+3级')
        print(level,'级',life,'命温迪基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     充能效率',format(EF/100,'.2%'))

    if relicnom(name,'代理团长琴蒲公英骑士') or name=='琴':
        ele=5
        if level==70:
            BH+=11243
            BA+=183
            BD+=588
            skill=[61.8,58.3,77.1,84.3,101,365,727,6.18,20.7,2.7,1,0.5,0.8,0.58,0.33,0.27]
        if level==80:
            BH+=12965
            BA+=211
            BD+=678
            skill=[70.3,66.3,87.6,95.8,115,409,815,6.18,20.7,2.7,1,0.5,0.8,0.58,0.33,0.27]
        if life>=2:
            speed=15
            print('2命 守护众人的坚盾 生效，队伍中所有角色获得15％攻击速度和15％移动速度提升')
            if life>=3:
                skill[6]=skill[6]*1.2;
                print('3命  西风吹拂之时  生效，Q+3级')
                if life>=5:
                    skill[5]=skill[5]*1.2
                    print('5命 须臾一瞬的烈风 生效，E+3级')
        print(level,'级',life,'命琴基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD)
    
    if relicnom(name,'砂糖'):
        ele=5
        if level==70:
            BH+=7141
            BA+=139
            BD+=543
            EDX[5]+=12
            skill=[41.8,38.3,48.1,59.9,264,720,15.3,20.43,1,0.88,0.5,0.8,0.58,0.33]
        if level==80:
            BH+=8192
            BA+=150
            BD+=588
            EDX[5]+=18
            skill=[38.5*1.2,35.2*1.2,44.2*1.2,55.1*1.2,296,805.8,15.3,20.43,1,0.88,0.5,0.8,0.58,0.33]
        if life>=1:
            '在输出循环里定义'
            print('1命 堆叠真空域 生效，风灵作成·陆叁零捌的可使用次数增加1次')
            if life>=2:
                skill[5]=skill[5]*1.333
                print('2命 不羁型贝特 生效，禁·风灵作成·柒伍同构贰型的技能持续时间延长2秒')
                if life>=3:
                    skill[4]=skill[4]*1.2
                    print('3命  零失误少女  生效，风灵作成·陆叁零捌的技能等级提高3级')
                    if life>=4:
                        RR=[[8,6,0,0,30,0,0,0,7,0,0,0,-4,4,0,0,0,0,0,0]]
                        print('4命 炼金的偏执 生效，砂糖每进行7次普通攻击或者重击，风灵作成·陆叁零捌的冷却时间就会减少4秒(期望)')
                        if life>=5:
                            skill[5]=skill[5]*1.2
                            print('5命 认真普通瓶   生效，禁·风灵作成·柒伍同构贰型的技能等级提高3级')
        print(level,'级',life,'命砂糖基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     风元素伤害',format(EDX[5]/100,'.2%'))
        
    if relicnom(name,'重云'):
        ele=2
        if level==70:
            BH+=9241
            BA+=172
            AR+=12
            BD=501
            skill=[89.5,80.7,103,129,215,178*3,15.58,12,2,1.03,1.4,1.12,0.6,0.62]
        if level==80:
            BH+=9734
            BA+=197
            BD+=575
            AR+=18
            skill=[102,91.8,117,147,241,199*3,15.58,12,2,1.03,1.4,1.12,0.6,0.62]
        RR=[[3,1,1,0,20,0,1,1,1,11.03,0,0,0,0,0,0,0,3,0,skill[4]],[3,0,0,0,13.03,0,1,0,1,0,0,0,-1,8,0,0,3,0,0,0]]
        if life>=1:
            RR=[[3,1,1,0,20,0,1,1,1,11.03,0,0,0,0,0,0,0,3,0,skill[4]],[3,0,0,0,13.03,0,1,0,1,0,0,0,-1,8,0,0,3,0,0,0],[14,14,1,0,11.03,0,1,1,1,0,0,0,0,0,0,0,0,3,0,150]]
            print('1命 释凌咏冰 生效，普通攻击的最后一击会向前方释放三道冰之刃，每道冰之刃对沿途的敌人造成重云50%攻击力的冰元素伤害')
            if life>=2:
                RR=[[3,1,1,0,20,0,1,1,1,11.03,0,0,0,0,0,0,0,3,0,skill[4]],[3,0,0,0,13.03,0,1,0,1,0,0,0,-1,8,0,0,3,0,0,0],[14,14,1,0,11.03,0,1,1,1,0,0,0,0,0,0,0,0,3,0,150],[3,0,0,0,11.03,0,1,0,1,0,0,0,-3,15,0,0,0,0,0,0]]
                print('2命 周天运转 生效，在灵刃·重华叠霜领域内施放的元素战技与元素爆发的冷却时间减少15%')
                if life>=3:
                    skill[5]=skill[5]*1.2
                    print('3命  云尽光生   生效，Q+3级')
                    if life>=5:
                        skill[4]=skill[4]*1.2
                        RR=[[3,1,1,0,20,0,1,1,1,11.03,0,0,0,0,0,0,0,3,0,skill[4]],[3,0,0,0,13.03,0,1,0,1,0,0,0,-1,8,0,0,3,0,0,0],[14,14,1,0,11.03,0,1,1,1,0,0,0,0,0,0,0,0,3,0,150],[3,0,0,0,11.03,0,1,0,1,0,0,0,-3,15,0,0,0,0,0,0]]
                        print('5命 真道正理 生效，E+3级')
                        if life>=6:
                            Q=15
                            skill[5]=skill[5]/3*4
                            print('6命 四灵捧圣  生效，灵刃·云开星落对生命值百分比低于重云的敌人造成伤害时，伤害提升15%;此外，施放时，会召唤一柄额外的灵刃')
        print(level,'级',life,'命重云基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     攻击力加成',format(AR/100,'.2%'))
        
    if relicnom(name,'凯亚凝冰渡海真君矿工头子'):
        ele=2
        if level==70:
            BH+=8989
            BA+=172
            BD+=612
            EF+=20.1
            skill=[68.8,66.1,83.5,90.6,163.9,239,1164,6.37,15.77,1.33,0.83,1.03,0.97,0.65,0.45,0.42]
        if level==80:
            BH+=10312
            BA+=197
            BD+=702
            EF+=26.8
            skill=[78.1,75.1,94.9,103,186,268,1308,6.37,15.77,1.33,0.83,1.03,0.97,0.65,0.45,0.42]
        if life>=1:
            RR=[[8,8,0,0,1,0,0,1,1,0,10,15,0,0,0,0,0,0,0,0]]
            print('1命 卓越的血脉 生效，对受到冰元素影响的敌人，凯亚的普通攻击与重击暴击率提升15％')
            if life>=3:
                skill[5]=skill[5]*1.2
                print('3命 凛冽的冰戏 生效，E+3级')
                if life>=5:
                    skill[6]=skill[6]*1.2
                    print('5命  至冷的拥抱    生效，Q+3级')
                    if life>=6:
                        skill[6]=skill[6]/3*4
                        print('6命 真道正理 生效，E+3级')
        print(level,'级',life,'命凯亚基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'     充能效率',format(EF/100,'.2%'))

    if relicnom(name,'七七僵尸椰奶'):
        ele=2
        if level==70:
            BH+=9463
            BA+=220
            BD+=706
        if level==80:
            BH+=10912
            BA+=253
            BD+=814
        if life>=2:
            AD+=15
            HD+=15
            print('2命 冰寒蚀骨  生效，普通攻击 重击伤害增加',format(AD/100,'.2%'))
        print(level,'级',life,'命七七基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD)

    if relicnom(name,'屁斜剑法猫耳刻晴'):
        ele=3
        if level==70:
            BH+=10025
            BA+=247
            BD+=612
            CD+=28.8
            skill=[52.5,52.5,69.6,84.3,208.2,63,210,7.84,586,13,2,1.42,0.67,0.92,0.58,0.58,0.4,0.4]
            RR=[[4,0,0,0,10,0,0,0,1,0,10,15,0,0,0,0,0,0,0,0],[3,0,0,0,6.42,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0]]
        if level==80:
            BH+=11561
            BA+=285
            BD+=705
            CD+=38.4
            skill=[59.6,59.6,79.1,95.8,237,70.6,235,7.84,655.8,13,2,1.42,0.67,0.92,0.58,0.58,0.4,0.4]
            RR=[[4,0,0,0,10,0,0,0,1,0,10,15,0,0,0,0,0,0,0,0],[3,0,0,0,6.42,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0]]
        if life>=1:
            skill[6]+=50
            print('1命 雷厉  生效，雷楔存在期间再次施放星斗归位时，在刻晴消失与出现的位置造成50%攻击力的雷元素范围伤害。')
            if life>=3:
                skill[8]*=1.2
                print('3命 登楼  生效，天街巡游的技能等级提高3级。')
                if life>=4:
                    AR+=25
                    print('4命 调律  生效，攻击力增加',format(AR/100,'.2%'))
                    if life>=5:
                        skill[6]*=1.2;skill[6]-=10;skill[5]*=1.2
                        print('5命 移灯 生效，星斗归位的技能等级提高3级。')
                        if life>=6:
                            RR1=[[4,0,0,0,8,0,0,0,1,0,-5,6,0,0,0,0,0,0,0,0],[3,0,0,0,8,0,0,0,1,0,-5,6,0,0,0,0,0,0,0,0],[2,0,0,0,8,0,0,0,1,0,-5,6,0,0,0,0,0,0,0,0],[1,0,0,0,8,0,0,0,1,0,-5,6,0,0,0,0,0,0,0,0]]
                            RR=np.row_stack((RR,RR1))
                            print('6命 廉贞  生效，进行普通攻击、重击、施放元素战技或元素爆发时，刻晴获得6%雷元素伤害加成，持续8秒。由普通攻击、重击、元素战技或元素爆发引起的效果分别独立存在。')
        print(level,'级',life,'命刻晴基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'   暴伤',format(CD/100,'.2%'))

    if relicnom(name,'北斗大姐头'):
        ele=3
        if level==70:
            BH+=10081
            BA+=174
            EDX[3]+=12
            BD=501
            skill=[91,90.6,113,111,143,552,152,7.6,20,120,1.5,1.13,1.1,0.8,1.22,0.83,0.43]
        if level==80:
            BH+=11565
            BA+=200
            EDX[3]+=18
            BD+=575
            skill=[103,103,128,126,163,618,170,7.6,20,134,1.5,1.13,1.1,0.8,1.22,0.83,0.43]
        speed=15;AD=15;HD=15;
        qqq=0
        RR=[[4,1,1,0,16.5,0,1,100,100,1,0,0,0,0,0,0,0,4,4,skill[9]]]
        for i in range(5):
            qqq+=skill[i]
        qqq=0.2*qqq/5
        if life>=3:
            skill[5]=skill[5]*1.2
            print('3命 潮奔蓦引电 生效，E+3级')
            if life>=4:
                RR=[[4,1,1,0,16.5,0,1,100,100,1,0,0,0,0,0,0,0,4,4,skill[9]],[3,1,1,0,10,0,1,100,100,0,0,0,0,0,0,0,0,4,0,qqq]]
                print('4命 牵星觅乡岸  生效，受到攻击后的10秒内，北斗的普通攻击附带20%额外雷元素伤害')
                if life>=5:
                    skill[6]=skill[6]*1.2;skill[9]=skill[9]*1.2
                    RR=[[4,1,1,0,16.5,0,1,100,100,1,0,0,0,0,0,0,0,4,4,skill[9]],[3,1,1,0,10,0,1,100,100,0,0,0,0,0,0,0,0,4,0,qqq]]
                    print('5命 踏浪霞连阶  生效，Q+3级')
        print(level,'级',life,'命北斗基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'   雷元素伤害',format(EDX[3]/100,'.2%'))

    if relicnom(name,'图书管理员丽莎'):
        ele=3
        if level==70:
            BH+=7393
            BA+=179
            BD+=443
            EM+=48
            skill=[49.5,44.9,53.5,68.7,221,609,45.7*19,18.42,20.92,1.72,3,1.67,0.58,0.57,0.42,0.45]
        if level==80:
            BH+=8481
            BA+=205
            BD+=508
            EM+=72
            skill=[55.4,50.3,59.9,76.9,248,682,51.2*19,18.42,20.92,1.72,3,1.67,0.58,0.57,0.42,0.45]
        if life>=3:
            skill[6]=skill[6]*1.2
            print('3命 谐振的雷光 生效，Q+3级')
            if life>=5:
                skill[5]=skill[5]*1.2
                print('5命 等离态的落雷   生效，E+3级')
        print(level,'级',life,'命丽莎基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'   元素精通',EM)

    if relicnom(name,'断罪之皇女小艾咪菲谢尔'):
        ele=3
        if level==70:
            BH+=7099
            BA+=189
            BD+=459
            AR+=12
            ee=144
            skill=[56.4,59.8,74.4,73.8,92.2,111*9,260,25.38,15.13,10,2,0.88,0.45,0.75,0.55,0.35,0.27]
        if level==80:
            BH+=8144
            BA+=216
            BD+=526
            AR+=18
            ee=162
            skill=[64.1,68,84.5,83.9,105,124*9,291,25.38,15.13,10,2,0.88,0.45,0.75,0.55,0.35,0.27]
        RR=[[9,1,1,0,10,0,1,6,6,1,0,0,0,0,0,0,0,4,0,80]]
        e2=0;q4=0;
        if life>=1:
            RR=[[9,1,1,0,10,0,1,6,6,1,0,0,0,0,0,0,0,4,0,80],[15,15,1,0,100,0,1,100,100,0,0,0,0,0,0,0,0,0,0,22]]
            print('1命 幽邃鸦眼  生效，奥兹不在战场上时，也会透过鸦眼守望菲谢尔。在菲谢尔对敌人进行普通攻击时，奥兹会通过鸦眼协同攻击，造成22％攻击力的伤害')
            if life>=2:
                e2=200
                print('2命 圣裁影羽 生效，施放夜巡影翼时，能额外造成200％攻击力的伤害。')
                if life>=3:
                    skill[5]=skill[5]*1.2;ee=ee*1.2
                    print('3命 渊色黑翼  生效，E+3级')
                    if life>=4:
                        q4=222
                        print('4命 皇女幻绮谭  生效，施放至夜幻现时，会对周围的敌人造成222％攻击力的雷元素伤害')
                        if life>=5:
                            skill[6]=skill[6]*1.2
                            print('5命 至夜默示录 生效，Q+3级')
                            if life>=6:
                                skill[9]=12
                                skill[5]=skill[5]/9*11
                                RR=[[9,1,1,0,10,0,1,6,6,1,0,0,0,0,0,0,0,4,0,80],[15,15,1,0,100,0,1,100,100,0,0,0,0,0,0,0,0,0,0,22],[9,1,1,0,13,0,1,100,100,0,0,0,0,0,0,0,0,4,0,30]]
                                print('6命 永夜之禽  生效，奥兹的存在时间延长2秒。此外，奥兹会协同当前场上自己的角色一起攻击，造成菲谢尔30％攻击力的雷元素伤害')
        RR1=[[4,4,1,0,10,0,1,1,1,0,0,0,0,0,0,0,0,4,3,skill[5]]]
        skill[5]=skill[5]+e2+ee;skill[6]+=q4;
        RR=np.row_stack((RR,RR1))
        print(level,'级',life,'命皇女基础数据：基础生命值',BH,'    基础攻击力',BA,'    基础防御力',BD,'   攻击力',format(AR/100,'.2%'))

    '数据打包'
    ele+=1
    f=EDX[0];w=EDX[1];i=EDX[2];t=EDX[3];r=EDX[4];v=EDX[5];c=EDX[6];p=EDX[7]
    debuff,debufftext=Debuffzip(FDebuff,TDebuff,WDebuff,IDebuff,VDebuff,RDebuff,GDebuff)
    attack,attacktext=Attackzip(0,AD,HD,E,Q,JQ,JE,LQ,LE,speed)
    data,datatext=datazip(ALLD,BA,SA,AR,BD,SD,DR,BH,SH,HR,C,CD,EM,EF,ele,c,v,r,t,i,w,f,p)
    return data,datatext,attack,attacktext,debuff,debufftext,skill,RR

def arme(level,weapon,refine):
    level=int(level)
    refine=int(refine)
    if level!=70 and level!=80:
        level=80
    if refine<=1:
        refine=1
    elif refine>=5:
        refine=5
    BH=0
    SH=0
    HR=0
    BA=0
    SA=0
    EDX=np.zeros(8)
    AR=0
    C=0
    CD=0
    EM=0
    BD=0
    SD=0
    DR=0
    AD=0
    HD=0
    E=0
    Q=0
    FDebuff=0
    TDebuff=0
    WDebuff=0
    IDebuff=0
    VDebuff=0
    RDebuff=0
    GDebuff=0
    EF=0
    ALLD=0
    speed=0
    LE=0
    LQ=0
    JQ=0
    JE=0
    ele=0
    RR=np.zeros((1,20))
    '++++++++内鬼透露的武器++++++++++'
    if relicnom(weapon,'龙脊之矛'):
        if level==70:
            BA=347
            EDX[7]=30.3/8*15
        if level==80:
            BA=401
            EDX[7]=33.5/8*15
        RR=[[0,1,1,0,10,10,1,1,1,0,0,0,0,0,0,0,0,0,0,170+refine*30]]
        print(level,'级,',weapon,'：基础攻击力',BA,'      元素精通',EM,'       ',refine,'阶精炼水火元素附着增伤',format(FDebuff/100,'.2%'))

    if relicnom(weapon,'腐殖之剑'):
        if level==70:
            BA=388
            EF=37.9
        if level==80:
            BA=449
            EF=41.9
        E+=12+4*refine
        RR=[[3,3,0,0,10,10,0,1,1,0,10,3+refine,0,0,0,0,0,0,0,0]]
        print(level,'级',weapon,'：基础攻击力',BA,'     暴击率',format(C/100,'.2%'),refine,'阶精炼普通攻击 重击加成 ',format(AD/100,'.2%'))
    
    '+++++++++法器+++++++++'
    if relicnom(weapon,'尘世之锁贯虹之槊无工之剑'):
        if level==70:
            BA=457
            AR=40.9
        if level==80:
            BA=532
            AR=45.3
        AR1=30+10*refine
        print(level,'级,',weapon,'：基础攻击力',BA,'      攻击力',format(AR/100,'.2%'),'       ',refine,'阶精炼特效触发后满加成',format(AR1/100,'.2%'))
        AR=AR+AR1
    
    if relicnom(weapon,'万国诸海图谱'):
        if level==70:
            BA=429
            EM=91
        if level==80:
            BA=497
            EM=106
        for i in range(np.size(EDX)):
            EDX[i]=16+4*(refine-1)
        print(level,'级万国诸海图谱：基础攻击力',BA,'      元素精通',EM,'       ',refine,'阶精炼元素伤害',format(EDX[0]/100,'.2%'),'。')
  
    if relicnom(weapon,'匣里日月'):
        if level==70:
            BA=388
            C=22.7
        if level==80:
            BA=449
            C=25.1
        '前两个为平A触发EQ增伤，第三个是EQ触发平A增伤'
        RR=[[1,0,0,0,6,0,0,0,1,0,0,0,3,20+5*(refine-1),0,0,0,0,0,0],[1,0,0,0,6,0,0,0,1,0,0,0,4,20+5*(refine-1),0,0,0,0,0,0],[9,0,0,0,6,0,0,0,1,0,0,0,1,20+5*(refine-1),0,0,0,0,0,0]]
        print(level,'级匣里日月：基础攻击力',BA,'      暴击率',format(C/100,'.2%'),'       ',refine,'阶精炼平A后，E和Q伤害增加以及EQ后平A伤害增加',format((20+5*(refine-1))/100,'.2%'),'。')

    if relicnom(weapon,'黑岩绯玉'):
        if level==70:
            BA=388
            CD=45.4
        if level==80:
            BA=449
            CD=50.2
        AR+=36+9*(refine-1)
        print(level,'级黑岩绯玉：基础攻击力',BA,'      爆伤',format(CD/100,'.2%'),'       ',refine,'阶精炼3层BUFF攻击力百分比',format(AR/100,'.2%'),'。')

    if relicnom(weapon,'四风原典'):
        if level==70:
            BA=457
            C=27.3
        if level==80:
            BA=532
            C=30.2
        for i in range(np.size(EDX)-1):
            EDX[i]+=32+8*(refine-1)
        print(level,'级四风原典：基础攻击力',BA,'     爆率',format(C/100,'.2%'),'     ',refine,'阶精炼4层BUFF元素伤害加成',format(EDX[0]/100,'.2%'),'。')

    if relicnom(weapon,'昭心'):
        if level==70:
            BA=347
            AR=45.4
        if level==80:
            BA=401
            AR=50.3
        RR=[[8,8,1,0,5,13-refine,1,1,1,0,0,0,0,0,0,0,0,0,0,210+30*refine]]
        print(level,'级昭心：基础攻击力',BA,'     攻击力',format(AR/100,'.2%'),'     ',refine,'阶精炼伤害特效默认单体环境，伤害:',format((210+30*refine)/100,'.2%'))

        
    if relicnom(weapon,'天空之卷'):
        if level==70:
            BA=506
            AR=27.3
        if level==80:
            BA=590
            AR=30.2
        for i in range(np.size(EDX)):
            EDX[i]+=12+3*(refine-1)
        RR=[[1,7,1,0,15,30,1,6,6,1.5,0,0,0,0,0,0,0,0,0,120+40*refine]]
        print(level,'级天空之卷：基础攻击力',BA,'      攻击力',format(AR/100,'.2%'),'       ',refine,'阶精炼元素伤害加成',format(EDX[0]/100,'.2%'),'。特效伤害15秒内共造成6次',format((120+40*refine)/100,'.2%'),'的伤害')

    if relicnom(weapon,'流浪乐章'):
        if level==70:
            BA=388
            CD=45.4
        if level==80:
            BA=449
            CD=50.3
        A=random.randint(1,100)
        if A<=33:
            RR=[[0,0,0,0,10,30,0,0,1,0,3,60+15*(refine-1),0,0,0,0,0,0,0,0]]
            print(level,'级流浪乐章：基础攻击力',BA,'     暴击伤害',format(CD/100,'.2%'),'     ',refine,'阶精炼触发攻击力',format(60+15*(refine-1)/100,'.2%'),'。')
        if A>33 and A<=67:
            RR=[[0,0,0,0,10,30,0,0,1,0,-2,48+12*(refine-1),0,0,0,0,0,0,0,0],[0,0,0,0,10,30,0,0,1,0,-3,48+12*(refine-1),0,0,0,0,0,0,0,0],[0,0,0,0,10,30,0,0,1,0,-4,48+12*(refine-1),0,0,0,0,0,0,0,0],[0,0,0,0,10,30,0,0,1,0,-5,48+12*(refine-1),0,0,0,0,0,0,0,0],[0,0,0,0,10,30,0,0,1,0,-6,48+12*(refine-1),0,0,0,0,0,0,0],[0,0,0,0,10,30,0,0,1,0,-7,48+12*(refine-1),0,0,0,0,0,0,0],[0,0,0,0,10,30,0,0,1,0,-8,48+12*(refine-1),0,0,0,0,0,0,0],]
            print(level,'级流浪乐章：基础攻击力',BA,'     暴击伤害',format(CD/100,'.2%'),'     ',refine,'阶精炼触发全元素伤害',format(48+12*(refine-1)/100,'.2%'),'。')
        if A>67:
            RR=[[0,0,0,0,10,30,0,0,1,0,12,240+60*(refine-1),0,0,0,0,0,0,0,0]]
            print(level,'级流浪乐章：基础攻击力',BA,'     暴击伤害',format(CD/100,'.2%'),'     ',refine,'阶精炼触发元素精通',240+60*(refine-1),'。')
        
        
    '+++++++++双手剑+++++++++'
    if relicnom(weapon,'狼末狼的末路'):
        if level==70:
            BA=457
            AR=40.9
        if level==80:
            BA=532
            AR=45.3
        AR1=15+5*refine
        RR=[[7,0,0,0,12,30,0,0,1,0,3,30+10*refine,0,0,0,0,0,0,0,0]]
        print(level,'级狼的末路：基础攻击力',BA,'      攻击力',format(AR/100,'.2%'),'       ',refine,'阶精炼第二特效触发后加成',format(AR1/100,'.2%'),'。触发特效12秒内增加攻击力',format((30+10*refine)/100,'.2%'))
        AR=AR+AR1

    if relicnom(weapon,'螭骨剑'):
        if level==70:
            BA=388
            C=22.7
        if level==80:
            BA=449
            C=25.1
        RR=[[0,11,0,0,30,4,0,5,5,6,0,5+refine,0,0,0,0,0,0,0,0]]
        print(level,'级螭骨剑：基础攻击力',BA,'      暴击率',format(C/100,'.2%'),'       ',refine,'阶精炼满层全伤加成',format(5*(5+refine)/100,'.2%'),'。')
        
    if relicnom(weapon,'天空之傲'):
        if level==70:
            BA=506
            EF=30.3
        if level==80:
            BA=590
            EF=33.5
        ALLD+=8+2*(refine-1)
        RR=[[4,8,1,0,20,0,1,8,8,0,0,0,0,0,0,0,0,0,0,60+refine*20]]
        print(level,'级天空之傲：基础攻击力',BA,'      充能效率',format(EF/100,'.2%'),'       ',refine,'阶精炼全伤加成',format(ALLD/100,'.2%'),'。开大后20秒8刀内每刀附带',format((60+refine*20)/100,'.2%'))
        
    if relicnom(weapon,'雨裁'):
        if level==70:
            BA=388
            EM=72
        if level==80:
            BA=449
            EM=80
        TDebuff+=20+4*(refine-1)
        WDebuff+=20+4*(refine-1)
        print(level,'级雨裁：基础攻击力',BA,'      元素精通',EM,'       ',refine,'阶精炼水雷元素附着增伤',format(TDebuff/100,'.2%'),'。')

    if relicnom(weapon,'白影剑'):
        if level==70:
            BA=388
            DR=42.6
        if level==80:
            BA=449
            DR=47.2
        AR1=24+6*(refine-1)
        DR1=24+6*(refine-1)
        print(level,'白影剑：基础攻击力',BA,'      防御力',format(DR/100,'.2%'),'       ',refine,'阶精炼攻防增加',format(AR1/100,'.2%'),'。')
        AR+=AR1
        DR+=DR1

    if relicnom(weapon,'试作古华'):
        if level==70:
            BA=429
            AR=22.7
        if level==80:
            BA=497
            AR=25.1
        RR=[[8,8,1,0,10,15,1,1,1,0,0,0,0,0,0,0,0,0,0,180+refine*60]]
        print(level,'试作古华：基础攻击力',BA,'      攻击力',format(AR/100,'.2%'),'       ',refine,'阶伤害15秒触发一次',format((180+refine*60)/100,'.2%'))


    '++++++++++长柄武器++++++++++'
    if relicnom(weapon,'和璞鸢'):
        if level==70:
            BA=428
            C=20.8
        if level==80:
            BA=499
            C=22.9
        AR+=3.2*7+0.7*7*(refine-1)
        E+=12+3*(refine-1)
        Q+=12+3*(refine-1)
        print(level,'和璞鸢：基础攻击力',BA,'      暴击率',format(C/100,'.2%'),'       ',refine,'阶精炼攻击力',format(AR/100,'.2%'),'  技能伤害增加',format(E/100,'.2%'))

    if relicnom(weapon,'天空之脊'):
        if level==70:
            BA=457
            EF=30.3
        if level==80:
            BA=532
            EF=33.3
        C+=8+2*(refine-1)
        speed=12
        RR=[[8,8,1,0,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,25+refine*15]]
        print(level,'天空之脊：基础攻击力',BA,'      元素充能',format(EF/100,'.2%'),'       ',refine,'阶精炼攻速提升',format(speed/100,'.2%'),'暴击率',format(C/100,'.2%'),'。伤害特效每两秒触发一次',format(25+refine*15/100,'.2%'))

    if relicnom(weapon,'昆吾断虹'):
        if level==70:
            BA=int(428/45*44)
            AR=20.8/5.5*9.9
        if level==80:
            BA=int(499/45*44)
            AR=22.9/5.5*9.9
        FDebuff+=24+6*(refine-1)
        IDebuff+=24+6*(refine-1)
        WDebuff+=24+6*(refine-1)
        VDebuff+=24+6*(refine-1)
        TDebuff+=24+6*(refine-1)
        RDebuff+=24+6*(refine-1)
        speed=8+refine*2
        print(level,'昆吾断虹：基础攻击力',BA,'      攻击力',format(AR/100,'.2%'),'       ',refine,'阶精炼元素附着增伤',format(FDebuff/100,'.2%'),'攻速提升',format(speed/100,'.2%'))

    if relicnom(weapon,'试作星镰'):
        if level==70:
            BA=388
            EF=37.9
        if level==80:
            BA=449
            EF=41.9
        AD+=16+6*(refine-1)
        HD+=16+6*(refine-1)
        RR=[[3,0,0,0,12,0,0,0,2,0,0,0,1,5+3*refine,0,0,0,0,0,0],[3,0,0,0,12,0,0,0,2,0,0,0,2,5+3*refine,0,0,0,0,0,0]]
        print(level,'试作星镰：基础攻击力',BA,'      充能效率',format(EF/100,'.2%'),'       ',refine,'阶精炼2层BUFF普通攻击 重击 增伤',format((10+6*refine)/100,'.2%'))

    if relicnom(weapon,'决斗之枪'):
        if level==70:
            BA=347
            C=30.3
        if level==80:
            BA=401
            C=33.5
        AR+=24+6*(refine-1)
        print(level,'决斗之枪：基础攻击力',BA,'      暴击率',format(C/100,'.2%'),'       ',refine,'阶精炼单挑时攻击增加',format(AR/100,'.2%'))

    if relicnom(weapon,'黑岩刺枪'):
        if level==70:
            BA=388
            CD=30.3/8*12
        if level==80:
            BA=449
            CD=33.5/8*12
        AR+=36+9*(refine-1)
        print(level,'黑岩刺枪：基础攻击力',BA,'      暴击伤害',format(CD/100,'.2%'),'       ',refine,'阶精炼3层攻击增加',format(AR/100,'.2%'))

    if relicnom(weapon,'流月针'):
        if level==70:
            BA=429
            EDX[7]=30.3/8*7.5
        if level==80:
            BA=497
            EDX[7]=33.5/8*7.5
        AD+=20+5*(refine-1)
        HD+=20+5*(refine-1)
        print(level,'流月针：基础攻击力',BA,'      物理伤害加成',format(EDX[7]/100,'.2%'),'       ',refine,'阶精炼普通攻击 重击 伤害增加',format(AD/100,'.2%'))

    if relicnom(weapon,'匣里灭辰'):
        if level==70:
            BA=347
            EM=162
        if level==80:
            BA=401
            EM=201
        FDebuff+=20+4*(refine-1)
        WDebuff+=20+4*(refine-1)
        print(level,'匣里灭辰：基础攻击力',BA,'      元素精通',EM,'       ',refine,'阶精炼水火元素附着增伤',format(FDebuff/100,'.2%'))

    
    '++++++++++弓箭++++++++++'
    if relicnom(weapon,'绝弦'):
        if level==70:
            BA=388
            EM=136
        if level==80:
            BA=449
            EM=151
        E+=24+6*(refine-1)
        Q+=24+6*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'      元素精通',EM,'       ',refine,'阶精炼元素战技 元素爆发 增伤',format(E/100,'.2%'))

    if relicnom(weapon,'苍翠猎弓'):
        if level==70:
            BA=388
            C=22.7
        if level==80:
            BA=449
            C=25.1
        RR=[[8,8,1,0,8,15-refine,1,8,8,0.5,0,0,0,0,0,0,0,0,0,30+refine*10]]
        print(level,'级',weapon,'：基础攻击力',BA,'      暴击率',format(C/100,'.2%'),refine,'阶精炼4秒内共造成8次',format((30+refine*10)/100,'.2%'),'的伤害，冷却',15-refine,'秒')

    if relicnom(weapon,'钢轮弓'):
        if level==70:
            BA=347
            EDX[7]=56
        if level==80:
            BA=401
            EDX[7]=62.9
        AR+=12+4*refine
        speed=3.6+refine*1.2
        print(level,'级',weapon,'：基础攻击力',BA,'      物理增伤',format(AR/100,'.2%'),'       ',refine,'阶精炼攻击力百分比',format(AR/100,'.2%'))

    if relicnom(weapon,'弓藏'):
        if level==70:
            BA=388
            AR=34.1
        if level==80:
            BA=449
            AR=37.7
        AD+=40+10*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'      攻击力百分比',format(AR/100,'.2%'),refine,'阶精炼 普通攻击增伤 ',format(AD/100,'.2%'))

    if relicnom(weapon,'试作澹月'):
        if level==70:
            BA=388
            AR=34.1
        if level==80:
            BA=449
            AR=37.7
        AR1=36+9*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'      攻击力百分比',format(AR/100,'.2%'),refine,'阶精炼 普通攻击增伤 ',format(AD/100,'.2%'))
        AR+=AR1

    if relicnom(weapon,'天空之翼'):
        if level==70:
            BA=506
            C=30.3/8*4.8
        if level==80:
            BA=590
            C=33.5/8*4.8
        CD+=20+5*(refine-1)
        RR=[[1,1,1,0,1,4.5-refine*0.5,1,1,1,0,0,0,0,0,0,0,0,0,0,50+refine*10]]
        print(level,'级天空之翼：基础攻击力',BA,'      暴击率',format(C/100,'.2%'),'       ',refine,'阶精炼爆伤加成',format(CD/100,'.2%'),'。每',4.5-refine*0.5,'秒内触发一次伤害特效',format((50+refine*10)/100,'.2%'))

    if relicnom(weapon,'阿莫斯之弓'):
        if level==70:
            BA=457
            AR=40.9
        if level==80:
            BA=532
            AR=45.3
        AD+=39+13*refine
        print(level,'级阿莫斯之弓：基础攻击力',BA,'      攻击力百分比',format(AR/100,'.2%'),'       ',refine,'阶精炼普通射击满加成',format(AD/100,'.2%'),'。')

    '+++++++++++单手剑+++++++++++'
    if relicnom(weapon,'铁蜂刺'):
        if level==70:
            BA=388
            EM=136
        if level==80:
            BA=449
            EM=151
        ALLD=16+4*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'      元素精通',EM,refine,'阶精炼2层全伤加成 ',format(ALLD/100,'.2%'))

    if relicnom(weapon,'笛剑'):
        if level==70:
            BA=388
            AR=34.1
        if level==80:
            BA=449
            AR=37.7
        RR=[[8,6,1,0,30,0.5,1,0,5,0,0,0,0,0,0,0,0,0,0,75+refine*25]]
        print(level,'级',weapon,'：基础攻击力',BA,'     攻击力百分比',format(AR/100,'.2%'),refine,'阶精炼5次平A或重击触发特效增伤 ',format((75+refine*25)/100,'.2%'))
        
    if relicnom(weapon,'匣里龙吟'):
        if level==70:
            BA=388
            AR=34.1
        if level==80:
            BA=449
            AR=37.7
        FDebuff+=20+4*(refine-1)
        TDebuff+=20+4*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'     攻击力百分比',format(AR/100,'.2%'),refine,'阶精炼对火雷元素附着增伤 ',format(FDebuff/100,'.2%'))

    if relicnom(weapon,'黑岩长剑'):
        if level==70:
            BA=429
            CD=34.1/9*8
        if level==80:
            BA=497
            CD=37.7/9*8
        AR+=36+9*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'     暴击伤害',format(CD/100,'.2%'),refine,'阶精炼3层BUFF攻击力加成 ',format(AR/100,'.2%'))

    if relicnom(weapon,'黑剑'):
        if level==70:
            BA=388
            C=22.7
        if level==80:
            BA=449
            C=25.1
        AD+=20+5*(refine-1)
        HD+=20+5*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'     暴击率',format(C/100,'.2%'),refine,'阶精炼普通攻击 重击加成 ',format(AD/100,'.2%'))

    if relicnom(weapon,'试作斩岩'):
        if level==70:
            BA=429
            EDX[7]=28.4
        if level==80:
            BA=497
            EDX[7]=31.5
        AR+=16+4*(refine-1)
        DR+=16+4*(refine-1)
        print(level,'级',weapon,'：基础攻击力',BA,'     物理伤害',format(EDX[7]/100,'.2%'),refine,'阶精炼4层BUFF攻防加成 ',format(AR/100,'.2%'))

    if relicnom(weapon,'暗巷闪光'):
        if level==70:
            BA=347
            C=28.4/7.5*4
        if level==80:
            BA=401
            C=31.5/7.5*4
        AR+=21+7*refine
        RR=[[0,0,0,1,6,6,0,0,1,0,3,21+7*refine,0,0,0,0,0,0,0,0]]
        print(level,'级',weapon,'：基础攻击力',BA,'     暴击率',format(C/100,'.2%'),refine,'阶精炼冲刺后攻击力加成 ',format((21+7*refine)/100,'.2%'))
    
    if relicnom(weapon,'天空之刃'):
        if level==70:
            BA=457
            EF=40.9/10.8*12
        if level==80:
            BA=532
            EF=45.3/10.8*12
        C+=4+(refine-1)
        AD+=20+5*(refine-1)
        HD+=20+5*(refine-1)
        print(level,'级',weapon,'基础攻击力',BA,'      充能效率',format(EF/100,'.2%'),'       ',refine,'阶精炼爆率增加',format(C/100,'.2%'),'，  普通攻击 重击 额外增伤',format(AD/100,'.2%'),'。')

    if relicnom(weapon,'风鹰剑'):
        if level==70:
            BA=506
            EDX[7]=34.1
        if level==80:
            BA=590
            EDX[7]=37.7
        AR+=15+5*refine
        RR=[[0,1,1,0,15,15,1,1,1,0,0,0,0,0,0,0,0,0,0,170+refine*30]]
        print(level,'级',weapon,'基础攻击力',BA,'      物伤加成',format(EDX[7]/100,'.2%'),'       ',refine,'阶精炼攻击力增加',format(AR/100,'.2%'))
    'BUFF,伤害特效打包'
    '''RR=[触发方式，消耗类别，特效类型，帧数，持续时间，CD，伤害触发次数，BUFF初始层数，BUFF堆叠次数，触发间隔，data类别(AR)，data数据，attack类别(EQ)，attack数据，易伤类别，易伤数据，平A元素附魔，伤害类型，伤害数据]
                     0              1            2              3           4           5            6                        7                    8                      9             10                  11                12                     13                14                  15             16             17             18'''
    ele=0
    f=EDX[0];w=EDX[1];i=EDX[2];t=EDX[3];r=EDX[4];v=EDX[5];c=EDX[6];p=EDX[7]
    debuff,debufftext=Debuffzip(FDebuff,TDebuff,WDebuff,IDebuff,VDebuff,RDebuff,GDebuff)
    attack,attacktext=Attackzip(0,AD,HD,E,Q,JQ,JE,LQ,LE,speed)
    data,datatext=datazip(ALLD,BA,SA,AR,BD,SD,DR,BH,SH,HR,C,CD,EM,EF,ele,c,v,r,t,i,w,f,p)
    return data,datatext,attack,attacktext,debuff,debufftext,RR

def relics(name,Relics,T1,T2):
    BH=0
    SH=0
    HR=0
    BA=0
    SA=0
    AR=0
    C=0
    CD=0
    EM=0
    BD=0
    SD=0
    DR=0
    AD=0
    HD=0
    E=0
    Q=0
    EDX=np.zeros(8)
    FDebuff=0
    TDebuff=0
    WDebuff=0
    IDebuff=0
    VDebuff=0
    RDebuff=0
    GDebuff=0
    EF=0
    ALLD=0
    ele=0
    speed=0
    LE=0
    LQ=0
    JQ=0
    JE=0
    RR=np.zeros((1,20))
    Relics=int(Relics)
    if Relics<=3:
        SHR=1893
        SAR=123
    if Relics==4:
        SHR=3571
        SAR=232
    if Relics>=5:
        SHR=4780
        SAR=311
    '四件套效果'
    if T1==T2:
        if relicnom(T1,'暴雪行者') or relicnom(T2,'暴雪行者'):
            EDX[2]=15
            IDebuff=30
            print('暴雪行者4件套触发,冰伤害增加15%，对冰元素附着目标增伤30%')
        if relicnom(T1,'征涛之人') or relicnom(T2,'征涛之人'):
            EDX[1]=15
            RR=[[3,0,0,0,12.5,0,0,1,1,0,0,0,1,25,0,0,0,0,0,0],[3,0,0,0,12.5,0,0,1,1,0,0,0,2,25,0,0,0,0,0,0]]
            print('征涛之人2件套触发水伤害增加15%,   E后12秒普通攻击与重击增伤25%,')
        if relicnom(T1,'冰风迷途的勇士') or relicnom(T2,'冰风迷途的勇士'):
            EDX[2]=15
            C=30
            print('冰风迷途的勇士2件套触发冰伤害增加15%，考虑到碎冰会打破冻结，按总共30%暴击率来算。')
        if relicnom(T1,'流浪大地的乐团'):
            EM=80
            HD=35
            print('流浪大地的乐团4件套触发,元素精通',EM,'重击增伤',format(HD/100,'.2%'))
        if relicnom(T1,'角斗士的终幕礼'):
            AR=18
            AD=35
            print('角斗士的终幕礼4件套触发,攻击力',format(AR/100,'.2%'),'普通攻击增伤',format(AD/100,'.2%'))
        if relicnom(T1,'战狂血战之人'):
            C=36
            print('战狂4件套触发，暴击率增加',format(C/100,'.2%'))
        if relicnom(T1,'昔日宗室之仪'):
            Q=20
            RR=[[4,0,0,0,10,0,0,1,1,0,3,20,0,0,0,0,0,0,0,0]]
            print('昔日宗室之仪4件套触发,元素爆发伤害增加',format(Q/100,'.2%'),'开大后攻击力+20%持续10秒')
        if relicnom(T1,'染血的骑士道'):
            EDX[7]=25
            HD=50
            print('染血的骑士道4件套触发,物伤增加',format(EDX[7]/100,'.2%'),'重击增伤',format(HD/100,'.2%'))
        if relicnom(T1,'渡火渡过烈火的贤人'):
            FDebuff=35
            print('渡过烈火的贤人4件套触发,火元素附着增伤',format(FDebuff/100,'.2%'))
        if relicnom(T1,'炽烈的炎之魔女火套'):
            EDX[0]=15
            RR=[[3,0,0,0,10,0,0,0,3,0,-2,7.5,0,0,0,0,0,0,0,0]]
            print('魔女4件套触发,E后10秒内火伤增加7.5%，可叠三次，总计37.5火伤，但是香菱只能吃一层，可莉吃两层')
        if relicnom(T1,'如雷的盛怒雷套'):
            EDX[3]=15
            RR=[[0,7,0,0,10000,0,0,1000,1000,2,0,0,-4,1,0,0,0,0,0,0]]
            print('如雷的盛怒4件套触发，雷伤增加',format(EDX[3]/100,'.2%'),'触发反应E减1秒CD，内置CD改为2S')
        if relicnom(T1,'平雷鸣平息鸣雷的尊者'):
            TDebuff=35
            print('平息鸣雷的尊者4件套触发,雷元素附着增伤',format(TDebuff/100,'.2%'))
        if relicnom(T1,'武人'):
            AD=40
            HD=40
            print('武人4件套触发，普通攻击 重击增伤',format(AD/100,'.2%'))
        if relicnom(T1,'悠古的磐岩岩套'):
            EDX[4]=15
            print('悠古的磐岩2件套触发,岩伤增加',format(EDX[4]/100,'.2%'))
        if relicnom(T1,'逆飞的流星'):
            AD=40
            HD=40
            print('逆飞的流星4件套触发，普通攻击 重击增伤',format(AD/100,'.2%'))
        if relicnom(T1,'翠绿之影风套'):
            EDX[5]=15
            print('翠绿之影4件套触发,风伤增加',format(EDX[5]/100,'.2%'))

    '2+2套装效果'
    if T1!=T2:
        if relicnom(T1,'暴雪行者') or relicnom(T2,'暴雪行者'):
            EDX[2]=15
            print('暴雪行者2件套触发,冰伤害增加15%')
        if relicnom(T1,'征涛之人') or relicnom(T2,'征涛之人'):
            EDX[1]=15
            print('征涛之人2件套触发水伤害增加15%,')
        if relicnom(T1,'冰风迷途的勇士') or relicnom(T2,'冰风迷途的勇士'):
            EDX[2]=15
            print('冰风迷途的勇士2件套触发冰伤害增加15%')
        if relicnom(T1,'流浪大地的乐团') or relicnom(T2,'流浪大地的乐团'):
            EM=80
            print('流浪大地的乐团2件套触发,元素精通',EM)
        if relicnom(T1,'角斗士的终幕礼') or relicnom(T2,'角斗士的终幕礼'):
            AR=18
            print('角斗士的终幕礼2件套触发,攻击力+',format(AR/100,'.2%'))
        if relicnom(T1,'战狂血战之人') or relicnom(T2,'战狂血战之人'):
            C=12
            print('战狂2件套触发，暴击率+',format(C/100,'.2%'))
        if relicnom(T1,'昔日宗室之仪') or relicnom(T2,'昔日宗室之仪'):
            Q=20
            print('昔日宗室之仪2件套触发,元素爆发增伤',format(Q/100,'.2%'))
        if relicnom(T1,'染血的骑士道') or relicnom(T2,'染血的骑士道'):
            EDX[7]=25
            print('染血的骑士道2件套触发,物理伤害增加',format(EDX[7]/100,'.2%'))
        if relicnom(T1,'炽烈的炎之魔女火套') or relicnom(T2,'炽烈的炎之魔女火套'):
            EDX[0]=15
            print('炽烈的炎之魔女2件套触发,火伤增加',format(EDX[0]/100,'.2%'))
        if relicnom(T1,'如雷的盛怒雷套') or relicnom(T2,'如雷的盛怒雷套'):
            EDX[3]=15
            print('如雷的盛怒2件套触发,雷伤增加',format(EDX[3]/100,'.2%'))
        if relicnom(T1,'武人') or relicnom(T2,'武人'):
            AD=15
            HD=15
            print('武人2件套触发,普通攻击 重击增伤',format(AD/100,'.2%'))
        if relicnom(T1,'悠古的磐岩岩套') or relicnom(T2,'悠古的磐岩岩套'):
            EDX[4]=15
            print('悠古的磐岩2件套触发,岩伤增加',format(EDX[4]/100,'.2%'))
        if relicnom(T1,'翠绿之影风套') or relicnom(T2,'翠绿之影风套'):
            EDX[5]=15
            print('翠绿之影2件套触发,风伤增加',format(EDX[5]/100,'.2%'))
    f=EDX[0];w=EDX[1];i=EDX[2];t=EDX[3];r=EDX[4];v=EDX[5];c=EDX[6];p=EDX[7]
    debuff,debufftext=Debuffzip(FDebuff,TDebuff,WDebuff,IDebuff,VDebuff,RDebuff,GDebuff)
    attack,attacktext=Attackzip(0,AD,HD,E,Q,JQ,JE,LQ,LE,speed)
    data,datatext=datazip(ALLD,BA,SA,AR,BD,SD,DR,BH,SH,HR,C,CD,EM,EF,ele,c,v,r,t,i,w,f,p)
    return data,datatext,attack,attacktext,debuff,debufftext,RR

def plus(level,name,life,weapon,refine,Relics,luck,T1,T2):
    '人物，武器，圣遗物数据，BUFF，伤害特效汇总'
    data1,datatext1,attack1,attacktext1,debuff1,debufftext1,skill,RR1=cara(level,name,life)
    data2,datatext2,attack2,attacktext2,debuff2,debufftext2,RR2=arme(level,weapon,refine)
    data3,datatext3,attack3,attacktext3,debuff3,debufftext3,RR3=relics(name,Relics,T1,T2)
    R1=np.row_stack((RR1,RR2))
    RR=np.row_stack((R1,RR3))
    data=np.zeros(np.size(data1))
    attack=np.zeros(np.size(attack1))
    debuff=np.zeros(np.size(debuff1))
    for i in range(np.size(data)):
        data[i]=data1[i]+data2[i]+data3[i]
    for i in range(np.size(attack)):
        attack[i]=attack1[i]+attack2[i]+attack3[i]
    for i in range(np.size(debuff)):
        debuff[i]=debuff1[i]+debuff2[i]+debuff3[i]
    return data,datatext1,attack,attacktext1,debuff,debufftext1,skill,RR


def Attackzip(R,AD,HD,E,Q,JQ,JE,LQ,LE,speed):
    A=(R,AD,HD,E,Q,JQ,JE,LQ,LE,speed)
    B=('特效增伤','平A增伤','重击增伤','E增伤','Q增伤','Q冷却按秒','E冷却按秒','Q冷却百分比','E冷却百分比','平A增速')
    return A,B

def attackinfo(n):
    B=('特效','平A','重击','E','Q')
    return B[int(n)]

def eleinfo(n):
    E=('物理','火','水','冰','雷','岩','风','草')
    return E[int(n)]

def Debuffzip(FDebuff,TDebuff,WDebuff,IDebuff,VDebuff,RDebuff,GDebuff):
    '元素附着增伤打包'
    A=(FDebuff,WDebuff,IDebuff,TDebuff,RDebuff,VDebuff,GDebuff)
    B=('火','水','冰','雷','岩','风','草')
    return A,B

def datazip(ALLD,BA,SA,AR,BD,SD,DR,BH,SH,HR,C,CD,EM,EF,ele,c,v,r,t,i,w,f,p):
    A=(ALLD,BA,SA,AR,BD,SD,DR,BH,SH,HR,C,CD,EM,EF,ele,c,v,r,t,i,w,f,p)
    B=('全伤害','基础攻','固定攻','比例攻','基础防','固定防','比例防','基础血','固定血','比例血','爆率','爆伤','元素精通','元素充能','角色元素种类编号','草风岩雷冰水火物')
    return A,B


'BUFF的伤害特效  触发/结算 的对应阶段文本      以及对应的层数消耗'
def TEXT(a):
    A=('自然','普通','重击','战技','爆发','被击','满层','普通重击战技爆发','普通重击','战技爆发','重击泄能','自然被击','断流爆','断流斩','终结','激活','普通停止')
    return A[int(a)]

'BUFF和伤害特效  触发   函数，部分机制简单的角色伤害特效，比如命之座可以直接写在RR里，带入特效计算'
def buffstart(RR,style,T,cycle,circle):
    '首先找出特效并触发'
    for i in range(RR.shape[0]):
        'style为0,1,2,3,4,5分别指纯CD触发(如螭骨剑)，平A触发，重击触发，E触发，Q触发，被击触发(卢姥爷，北斗天赋)'
        '触发方式吻合'
        if relicnom(style,TEXT(RR[i,0])):
            '找出所有光环BUFF，并迭代触发时间与层数'
            if RR[i,2]==0:
                '判定BUFF CD'
                if T>=cycle[i,1]:
                    '触发BUFF所需的不可操作动画时间，一般为0'
                    if RR[i,3]!=0:
                        T+=RR[i,3]
                    '初始化起始层数，并判断初始层数是否为0，以防初始了个寂寞。'
                    if  RR[i,7]!=0:
                        cycle[i,3]=RR[i,7]
                    '触发后层数+1'
                    cycle[i,3]+=1
                    '层数上限'
                    if cycle[i,3]>RR[i,8]:
                        cycle[i,3]=RR[i,8]
                    '定义BUFF结束时刻'
                    cycle[i,0]=T+RR[i,4]
                    '定义BUFFCD时间校对'
                    cycle[i,1]=T+RR[i,5]
                    if T>cycle[i,0]:
                        cycle[i,3]=0
                    'cycle[i,0]是buff结束时间点，cycle[i,1]为BUFF计数器，cycle[i,2]为BUFF时间校对，cycle[i,3]是目前层数，cycle[i,4]是内置CD计数器，cycle[i,5]是内置CD校对'

            '找出所有触发的特效伤害，并迭代触发时间与层数'
            if RR[i,2]==1:
                '判定特效CD'
                if T>=circle[i,1]:
                    '触发特效所需的不可操作动画时间，一般为0'
                    T+=RR[i,3]
                    '初始化起始层数,一般为0,天空之傲为8'
                    if circle[i,3]==0 and RR[i,7]!=0:
                        circle[i,3]=RR[i,7]
                    '触发后层数+1'
                    if T<circle[i,0]:
                        circle[i,3]+=1
                    '层数上限'
                    if circle[i,3]>RR[i,8]:
                        circle[i,3]=RR[i,8]
                    '定义BUFF结束时刻'
                    circle[i,0]=T+RR[i,4]
                    '定义BUFFCD时间校对'
                    circle[i,1]=T+RR[i,5]
                    'circle[i,0]是buff结束时间点，circle[i,1]为BUFF CD结束点，circle[i,2]为BUFF内置CD结束点，circle[i,3]是目前层数'
    return T,cycle,circle


'BUFF和伤害特效  结算    函数 '
def buffend(RR,style,T,cycle,circle):
    '初始化防BUG，检索所有已触发BUFF和特效并结算，如果没有正在生效的BUFF和伤害特效，则返回空矩阵'
    BUFF=np.zeros((RR.shape[0],7))
    EFFECT=np.zeros((RR.shape[0],3))
    demege=0 
    data=0
    attack=0
    debuff=0
    demage=0
    '全部过一遍'
    for i in range(cycle.shape[0]):
        '阶段/判定类型确认'
        if relicnom(style,TEXT(RR[i,1])):
            'BUFF是否还存在判定'
            if RR[i,2]==0:
                '如果持续时间结束，则层数归零'
                if T>cycle[i,0]:
                    cycle[i,3]=0
                if T<=cycle[i,0] and cycle[i,3]>0:
                    'BUFF结算内置CD'
                    if T>=cycle[i,2] or RR[i,1]==11:
                        if RR[i,1]!=11:
                            cycle[i,2]=T+RR[i,9]
                        '层数堆叠型，效果为层数 * BUFF数据'
                        if relicnom('自然',style):
                            data=RR[i,11]*cycle[i,3]
                            attack=RR[i,13]*cycle[i,3]
                            debuff=RR[i,15]*cycle[i,3]
                        '满层触发型，结算时产生 与 层数 无关的 BUFF         层数归零，BUFF持续时间归零'
                        if RR[i,1]==6 and cycle[i,3]==RR[i,8]:
                            data=RR[i,11]
                            attack=RR[i,13]
                            debuff=RR[i,15]
                            cycle[i,3]=0
                            cycle[i,0]=T
                        
                        '层数消耗触发型，消耗层数 型BUFF，比如下一次重击增伤 50，    层数消耗判定'
                        if RR[i,1]!=6 and RR[i,1]!=0 and (not relicnom('泄能',style)) and (not relicnom(style,'自然')):
                            data=RR[i,11]
                            attack=RR[i,13]
                            debuff=RR[i,15]
                            cycle[i,3]-=1
                            if cycle[i,3]==0:
                                cycle[i,0]=0
                        '螭骨剑类型被击掉层，BUFF层数-1，被击阶段不结算加成，自然阶段结算加成'
                        if RR[i,1]==11 and T>=cycle[i,2]:
                            cycle[i,2]=T+RR[i,9]
                            cycle[i,3]-=1
                        '元素附魔'
                        BUFF[i,0]=-RR[i,16]-1
                        'data类别'
                        BUFF[i,1]=RR[i,10]
                        'data数据'
                        BUFF[i,2]=data
                        'attack类别'
                        BUFF[i,3]=RR[i,12]
                        'attack数据'
                        BUFF[i,4]=attack
                        'debuff类别'
                        BUFF[i,5]=RR[i,14]
                        'debuff数据'
                        BUFF[i,6]=debuff
                        
            if RR[i,2]==1:
                if T>circle[i,0]:
                    circle[i,3]=0
                if T<=circle[i,0] and circle[i,3]>0:
                    '伤害特效内置CD判定'
                    if T>=circle[i,2]:
                        '内置CD时间校对'
                        circle[i,2]=T+RR[i,9]
                        '满层触发型，比如笛剑             触发后层数初始化，BUFF持续时间结束'
                        if RR[i,1]==6 and circle[i,3]==RR[i,8]:
                            demage=RR[i,-1]*RR[i,6]
                            circle[i,3]=0
                            circle[i,0]=T
                        '层数消耗触发型   层数判定'
                        if RR[i,1]!=6 and (not relicnom('泄能',style)):
                            '伤害公式为  触发次数 * 百分比，触发次数一般为1'
                            demage=RR[i,-1]*RR[i,6]
                            circle[i,3]-=1
                            if circle[i,3]==0:
                                circle[i,0]=T
                        if relicnom('泄能',TEXT(RR[i,1])):
                            '伤害公式为  触发次数*  百分比  *  层数，然后层数清0，BUFF消失'
                            demage=RR[i,-1]*RR[i,6]*circle[i,3]
                            circle[i,3]=0
                            circle[i,0]=T
                        '伤害元素类型，默认物理,'
                        EFFECT[i,0]=-RR[i,-3]-1
                        '特效伤害输出方式，1~4为吃平A，重击，E，Q加成，0为特效无加成'
                        EFFECT[i,1]=RR[i,-2]
                        '输出特效伤害百分比'
                        EFFECT[i,2]=demage
    return cycle,circle,BUFF,EFFECT

'面板计算模块'
def calcul(data,attack,debuff,ele,N):
    'ele 与 N 是外界输入的元素属性以及输出方式'
    '面板'
    A=data[1]*(1+data[3]/100)+data[2]
    '暴击系统'
    CDD=1+(min(100,data[10])*data[11]/10000)
    '伤害加成系统=全伤+角色属性的属性伤害+角色属性的元素附着增伤+输出方式增伤'
    if ele>=0:
        ele=-ele-1
    G=debuff[int(data[14])-1]
    '''if data[int(ele)]!=0:
        print('元素伤害：',data[int(ele)])'''
    ALLD=1+(data[0]+data[int(ele)]+G+attack[int(N)])/100
    S=A*CDD*ALLD
    '''if S!=0 and int(ele)!=-1 and int(ele)!=-2 :
        print('期望面板为:',S,'显示面板为:',A,'暴击增伤:',CDD,'伤害加成',ALLD-1,'\n当前全伤：',data[0],'属性增伤',data[int(ele)],'   易伤增伤',G,'输出方式',N,'  对应增伤：',attack[int(N)],'属性增伤序列:',ele)'''
    return S

def calcul2(data,attack,debuff,ele,N):
    '女仆E伤害计算'
    'ele 与 N 是外界输入的元素属性以及输出方式'
    '防御面板'
    A=data[4]*(1+data[6]/100)+data[5]
    '暴击系统'
    CDD=1+(data[10]*data[11]/10000)
    '伤害加成系统=全伤+角色属性的属性伤害+角色属性的元素附着增伤+输出方式增伤'
    if ele>=0:
        ele=-ele-1
    G=debuff[int(data[14])-1]
    '''if data[int(ele)]!=0:
        print('元素伤害：',data[int(ele)])'''
    ALLD=1+(data[0]+data[int(ele)]+G+attack[int(N)])/100
    S=A*CDD*ALLD
    '''if S!=0 and int(ele)!=-1:
        print('期望面板为:',S,'显示防御面板为:',A,'暴击增伤:',CDD,'全伤加成',ALLD-1,'\n当前全伤：',data[0],'属性增伤',data[ele],'   易伤增伤',G,'输出方式',N,'  对应增伤：',attack[int(N)],'属性增伤序列:',ele)'''
    return S


def ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill):
    '特效矩阵汇总，集中结算BUFF'
    A=[]
    B=[]
    na=0
    nb=0
    C=-1
    a=data.copy();b=attackdetail.copy();c=debuff.copy()
    '触发及结算汇总'
    for i in range(np.size(text)):
        T,cycle,circle=buffstart(RR,text[i],T,cycle,circle)
        cycle,circle,BUFF,EFFECT=buffend(RR,text[i],T,cycle,circle)
        if BUFF.any():
            A.append(BUFF)
            na+=1
        if EFFECT.any():
            nb+=1
            B.append(EFFECT)
    
    '''print('A=',A)
    print('B=',B)'''
    '面板整合，BUFF整合'
    multi=1
    if A!=[]:
        '''print('A=',A)'''
        for j in range(na):
            for i in range(RR.shape[0]):
                '班尼特大招加攻'
                if A[j][i,2]==10000:
                    A[j][i,2]=data[1]*skill[8]
                '女仆大招防御转攻击'
                if A[j][i,2]==10001:
                    A[j][i,2]=(data[4]*(1+data[6]/100)+data[5])*skill[6]
                '钟离大招生命值转伤害'
                if A[j][i,2]==10002:
                    A[j][i,2]=(data[7]*(1+data[9]/100)+data[8])*0.33/(skill[7]/100)
                a[int(A[j][i,1])]+=A[j][i,2]
                b[int(A[j][i,3])]+=A[j][i,4]
                c[int(A[j][i,5])]+=A[j][i,6]
                C=min(C,int(A[j][i,0]))
        '''print('a=',a)'''
    '特效伤害汇总结算'

    if B!=[]:
        for i in range(nb):
            for j in range(RR.shape[0]):
                D=calcul(a,b,c,int(B[i][j,0]),int(B[i][j,1]))
                SS[int(B[i][j,1])]+=D*(B[i][j,2])/100
                '''if D*(B[i][j,2])/100!=0:
                    print('元素属性',int(B[i][j,0]),'输出方式',int(B[i][j,1]),'输出倍率',int(B[i][j,2]))
                    print('SS[',int(B[i][j,1]),']=',SS[int(B[i][j,1])],'本次输出',D*(B[i][j,2])/100,'时间为',T)'''
    return T,SS,C,a,b,c,cycle,circle

'伤害循环模块'
def pourcentage(data,attackdetail,debuff,t1,name,life,skill,RR):
    '''RR=[触发方式，消耗类别，特效类型，帧数，持续时间，CD，伤害触发次数，BUFF初始层数，BUFF堆叠次数，触发间隔，data类别(AR)，data数据，attack类别(EQ)，attack数据，易伤类别，易伤数据，平A元素附魔，伤害元素，伤害方式，伤害数据]
                     0              1            2              3           4           5            6                        7                    8                      9             10                  11                12                     13                14                  15             16             17             18           19'''
    cycle=np.zeros((RR.shape[0],4))
    circle=np.zeros((RR.shape[0],4))
    '时间轴'
    T=0
    '总伤'
    S=0
    'A总伤'
    SA=0
    '重击总伤'
    SH=0
    'E总伤'
    SE=0
    'Q总伤'
    SQ=0
    'E计数器'
    NE=0
    'E时间轴校对'
    e=0
    'Q计数器'
    NQ=0
    'Q时间校对'
    q=0
    '伤害特效统计'
    SK=0
    SS=[SK,SA,SH,SE,SQ]

    '大概每一个角色基本都需要单独写一个自己的循环。V0.1优化算法后，依附于输出方式的角色特效可整合为普通特效，伤害计入对应输出方式，比如凝光大招和重击的星璇机制'
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'岩王爷岩神摩拉克斯钟离'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print(name,'用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7]+skill[-9])'''
            T=T+skill[-7]+skill[-9]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[7]/100)*D
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[7],'消耗时间：',skill[-8])'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            if ea==5:
                N=2
                text=('自然','被击','满层','重击')
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print(name,'用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[8]
        CDQ=skill[9]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(6):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break


    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'断罪之皇女小艾咪菲谢尔'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[3]+=s
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)
            print(name,'用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea,te):
            N=1;ele=0
            if T>te:
                text=('激活','自然','被击','满层','普通')
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print(name,'用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e,'E冷却减少',b[-4])'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        te=0
        CDE=skill[7]
        CDQ=skill[8]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDE*NE+e and T>=te:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    te=T+skill[9]
                    break
                if T>=CDQ*NQ+q and T>=te:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    te=T+skill[9]
                    break
                for i in range(5):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1,te)
                    if ((T>=CDE*NE+e or T>=CDQ*NQ+q) and T>=te) or T>=t1:
                        break
                    if i==4:
                        T+=0.58
    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'图书管理员丽莎'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[3]+=s
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)
            print(name,'用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=data[14]
            if ea==4:
                N=2
                text=('自然','被击','满层','重击')
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print(name,'用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e,'E冷却减少',b[-4])'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[7]
        CDQ=skill[8]
        h=4
        '输出循环'
        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,h,-h-1)
        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,h,-h-1)
        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,h,-h-1)
        nh=3
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    nh=0
                    break
                if T<=CDE*NE+e and nh<3:
                    'E冷却结束前BUFF没叠到三层就重击'
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,h,-h-1)
                    nh+=1
                    break
                for i in range(4):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break


    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'凯亚凝冰渡海真君矿工头子'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print(name,'用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            if ea==4:
                text=('自然','被击','满层','重击')
                N=2
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print(name,'用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[7]
        CDQ=skill[8]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(5):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==4:
                        T+=0.6
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'重云'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[4]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print(name,'用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[4],'消耗时间：',skill[-5])'''
            T+=skill[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            if ea==3:
                text=('自然','被击','满层','普通','终结')
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print(name,'用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[6]
        CDQ=skill[7]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(4):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==3:
                        T+=0.58

    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'岩主风主代理团长琴蒲公英骑士北斗大姐头') or name=='琴':
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print(name,'用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            if ea==4:
                text=('自然','被击','满层','普通','终结')
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            print(name,'用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)),skill[tea],b[-1])
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[7]
        CDQ=skill[8]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(5):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==4:
                        T+=0.58
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'砂糖'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[4]/100)*D
            SS[N]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            if number>0:
                if number==2:
                    NE=T//CDE
                    e=T%CDE
                if T>=CDE*NE+e and number!=0:
                    NE+=1*(1-min(b[-2],100)/100)
                    '''print('E中',number)'''
                number-=1
            else:
                NE=T//CDE
                e=T%CDE
                NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('砂糖用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[4],'消耗时间：',skill[-5],'元素伤害加成：',a[-int(a[14])-1],'number=',number)'''
            T+=skill[-5]
            return T,SS,NE,NQ,e,q,cycle,circle,number
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[N]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('砂糖用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=data[14]
            text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('砂糖用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''if b[-4]!=0:
                print('减少时间',b[-4],'时间轴',T,'E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[6]
        CDQ=skill[7]
        if life<1:
            number=-5
        else:
            number=2
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDE*NE+e and number==0:
                    '''print('0层充能：',CDE*NE+e,e)'''
                    number+=1
                if number>=1:
                    T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                    '''print('第一次E',number,CDE*NE+e,mo)'''
                    break
                if number<0:
                    if T>=CDE*NE+e:
                        T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                        break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(4):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e and number==0:
                        number+=1
                    if T>=CDQ*NQ+q or T>=t1 or number>=1 or T>=CDE*NE+e:
                        break
    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'风神卖唱的温蒂温迪巴巴托斯'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[N]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('温迪用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7],'元素伤害加成：',a[-int(a[14])-1])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[7]/100)*D
            SS[N]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('温迪用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[7],'消耗时间：',skill[-8])'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('温迪用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[8]
        CDQ=skill[9]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(6):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==5:
                        T+=0.33
    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'行秋'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,multi):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]*multi/100)*D
            SS[N]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('行秋用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5]*multi,'消耗时间：',skill[-6],'元素伤害加成：',a[-int(a[14])-1])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('行秋用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('行秋用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[7]
        CDQ=skill[8]
        multi=1
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    Tmulti=T+15
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,4,-5)
                    break                   
                if T>=CDE*NE+e:
                    if T<=Tmulti and life>=4:
                        multi=1.5
                    else:
                        multi=1
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,multi)
                    break
                for i in range(5):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==4:
                        T+=0.5
    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'莫娜'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[N]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('莫娜用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6],'元素伤害加成：',a[-int(a[14])-1])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[N]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('莫娜用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=data[14]
            if ea==4:
                N=2
                text=('被击','满层','重击','自然')
            else:
                text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('莫娜用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[7]
        CDQ=skill[8]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,4,-5)
                    break                   
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(3):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==2:
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,4,-5)
                            
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'点赞哥班尼特'):
        def EE1(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[3]+=s
            NE=T//CDE
            e=T%CDE
            NE+=(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('班尼特用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle

        def EE2(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('班尼特用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[7]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('班尼特用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[7],'消耗时间：',skill[-8])'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('班尼特用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE1=skill[9]
        CDE2=skill[10]
        CDQ=skill[11]
        '输出循环'
        if life<4 or life==6:
            for i in range(50000):
                if T>=t1:
                    break
                for j in range(5):
                    if T>=t1:
                        break
                    if T>=CDQ*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    if T>=CDE1*NE+e:
                        T,SS,NE,NQ,e,q,cycle,circle=EE1(T,CDE1,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    for i in range(5):
                        if T>=t1:
                            break
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE1*NE+e or T>=CDQ*NQ+q or T>=t1:
                            break
                        if i==4:
                            T+=0.58
        if 4<=life<6:
            for i in range(50000):
                if T>=t1:
                    break
                for j in range(5):
                    if T>=t1:
                        break
                    if T>=CDQ*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    if T>=CDE2*NE+e:
                        T,SS,NE,NQ,e,q,cycle,circle=EE2(T,CDE2,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    for i in range(5):
                        if T>=t1:
                            break
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE2*NE+e or T>=CDQ*NQ+q or T>=t1:
                            break
                        if i==4:
                            T+=0.58

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'侦查骑士安柏兔兔伯爵'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[N]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            if number>0:
                if number==2:
                    NE=T//CDE
                    e=T%CDE
                if T>=CDE*NE+e and number!=0:
                    NE+=1*(1-min(b[-2],100)/100)
                    '''print('E中',number)'''
                number-=1
            else:
                NE=T//CDE
                e=T%CDE
                NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            if number>-10:
                tt=skill[-7]+skill[-6]
            else:
                tt=skill[-7]
            '''print('安柏用E，时间轴：',round(T,2),'元素属性',ele,'s=',round(s,2),'D=',round(D,2),'倍率=',skill[6],'消耗时间：',tt,'元素伤害加成：',a[-int(a[14])-1],'第',NE,'个E')'''
            T+=tt
            return T,SS,NE,NQ,e,q,cycle,circle,number
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[7]/100)*D
            SS[N]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('安柏用Q，时间轴：',round(T,2),'元素属性',ele,'s=',round(s,2),'D=',round(D,2),'倍率=',skill[7],'消耗时间：',skill[-8],'元素伤害加成：',a[-int(a[14])-1],'第',NQ,'个Q')'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('安柏用A',ea+1,'时间轴：',round(T,2),'元素属性',ele,'s=',round(s,2),'D=',round(D,2),'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[8]
        CDQ=skill[9]
        number=-100
        '极限魔女覆盖，安柏能吃三层'
        mo=0
        nv=0
        tao=0
        '输出循环'
        if life<4:
            if life>=2:
                number=-5
            for i in range(50000):
                if T>=t1:
                    break
                for j in range(5):
                    if T>=t1:
                        break
                    if T>=CDQ*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    if T>=CDE*NE+e:
                        T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                        break
                    for i in range(5):
                        if T>=t1:
                            break
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                            break
                        if i==4:
                            T+=0.62
        if life>=4:
            number=2
            for i in range(50000):
                if T>=t1:
                    break
                for j in range(5):
                    if T>=t1:
                        break
                    if T>=CDE*NE+e and number==0:
                        '''print('0层充能：',CDE*NE+e,e)'''
                        number+=1
                    if number>=1 and T>=nv:
                        mo=T+8.5
                        nv=10000
                        tao=10000
                        T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                        '''print('第一次E','T=',T,'    下次冷却：',CDE*NE+e,'  下次使用',mo)'''
                    if number>=1 and T>=mo:
                        tao=T+8.5
                        mo=10000
                        nv=10000
                        T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                        '''print('第二次E','T=',T,'    下次冷却：',CDE*NE+e,'  下次使用',tao)'''
                    if number>=1 and T>=tao:
                        mo=10000
                        tao=10000
                        T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                        nv=CDE*(NE+0.61)
                        '''print('第三次E','T=',T,'    下次冷却：',CDE*NE+e,'  下次使用',nv)'''
                    if T>=CDQ*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    for i in range(5):
                        if T>=t1:
                            break
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE*NE+e and number==0:
                            number+=1
                        if (T>=CDQ*NQ+q or T>=t1) or (number>=1  and (T>=nv or T>=mo or T>=tao)):
                            break
                        if i==4:
                            T+=0.62
                    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'可莉'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[4]/100)*D
            SS[N]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            if number==2:
                NE=T//CDE
                e=T%CDE
            if T>=CDE*NE+e and number!=0:
                NE+=1*(1-min(b[-2],100)/100)
                '''print('E中',number)'''
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('可莉用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[4],'消耗时间：',skill[-5],'元素伤害加成：',a[-int(a[14])-1])'''
            number-=1
            T+=skill[-5]
            return T,SS,NE,NQ,e,q,cycle,circle,number
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[N]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('可莉用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=data[14]
            if ea==3:
                N=2
                text=('被击','满层','重击','自然')
            else:
                text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('可莉用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[6]
        CDQ=skill[7]
        number=2
        '极限魔女覆盖'
        mo=0
        nv=0
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDE*NE+e and number==0:
                    '''print('0层充能：',CDE*NE+e,e)'''
                    number+=1
                if number>=1 and T>=nv:
                    mo=T+9
                    nv=10000
                    T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                    '''print('第一次E',number,CDE*NE+e,mo)'''
                if number>=1 and T>=mo:
                    T,SS,NE,NQ,e,q,cycle,circle,number=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,number)
                    nv=CDE*(NE+0.51)
                    mo=10000
                    '''print('第二次E',number,CDE*NE+e,nv)'''
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(4):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e and number==0:
                        number+=1
                    if (T>=CDQ*NQ+q or T>=t1) or (number>=1  and (T>=nv or  T>=mo)):
                        break
                     
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'香菱'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('香菱用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[7]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('香菱用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[7],'消耗时间：',skill[-8])'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            if ea==5:
                N=2
                text=('自然','被击','满层','重击')
            elif ea==4:
                text=('自然','被击','满层','普通','终结')
            else:
                text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[N]+=s
            '''print('香菱用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[8]
        CDQ=skill[9]
        '输出循环'
        if life>=2:
            for i in range(50000):
                if T>=t1:
                    break
                for j in range(5):
                    if T>=t1:
                        break
                    if T>=CDQ*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    if T>=CDE*NE+e:
                        T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    for i in range(5):
                        if T>=t1:
                            break
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                            break
                        if i==4:
                            T+=0.58
        else:
            for i in range(50000):
                if T>=t1:
                    break
                for j in range(5):
                    if T>=t1:
                        break
                    if T>=CDQ*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    if T>=CDE*NE+e:
                        T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    for i in range(4):
                        if T>=t1:
                            break
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                            break
                        if i==3:
                            T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,5,-6)
                            

                        
    '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'女仆诺艾尔'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('被击','满层','战技','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul2(a,b,c,ele,N)
            s=(skill[4]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('女仆用E，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[4],'消耗时间：',skill[-5])'''
            T+=skill[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('被击','满层','爆发','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('女仆用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=data[14]
            text=('被击','满层','普通','自然')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[1]+=s
            '''print('女仆用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            '''print('E冷却时间点：',CDE*NE+e)'''
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[8]
        CDQ=skill[7]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(4):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                    if i==3:
                        T+=0.58

    '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'公子达达利亚'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('自然','被击','满层','战技')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[7]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('公子用E，时间轴：',round(T,2),'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[7],'冷却时间点：',NE*CDE+e,'元素属性',ele,'消耗时间：',skill[-8])'''
            T+=skill[-8]
            keep=T+30
            return T,SS,NE,NQ,e,q,cycle,circle,keep
        
        def QQ1(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('自然','被击','满层','爆发')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[15]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[15])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('公子用Q1，时间轴：',round(T,2),'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[15],'冷却时间点：',NQ*CDQ+q,'元素属性',ele,'消耗时间：',skill[-15])'''
            T+=skill[-15]
            return T,SS,NE,NQ,e,q,cycle,circle

        def QQ2(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('自然','被击','满层','爆发','断流爆')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[17]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[17])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('公子用Q2，时间轴：',round(T,2),'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[17],'冷却时间点：',NQ*CDQ+q,'元素属性',ele,'消耗时间：',skill[-16])'''
            T+=skill[-16]
            return T,SS,NE,NQ,e,q,cycle,circle

        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            '''print('公子用',ea+1,'时间轴：',round(T,2),'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            SS[1]+=s
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle

        def EA(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=data[14]
            text=('自然','被击','满层','普通','断流斩')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            '从skill[9]和skill[-9]开始'
            s=skill[ea]/100*D
            '''print('公子用E',ea-8,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            SS[1]+=s
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle


        def heavyattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=2;ele=data[14]
            text=('自然','被击','满层','重击')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            '''print('公子用H，时间轴：',T)'''
            D=calcul(a,b,c,ele,N)
            s=skill[6]/100*D
            SS[1]+=s
            T+=1/((1/skill[-7])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[8]
        CDQ1=skill[16]
        CDQ2=skill[18]
        '输出循环'
        T,SS,NE,NQ,e,q,cycle,circle,keep=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
        for i in range(3):
            T,SS,NE,NQ,e,q,cycle,circle=EA(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i+9,-i-9)
        for i in range(50000):
            if T>=t1:
                    break
            if T>=CDE*NE+e and T>keep:
                    T,SS,NE,NQ,e,q,cycle,circle,keep=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
            for j in range(10):
                if T>=t1:
                        break
                if T<keep:
                    if T>=CDQ2*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ2(T,CDQ2,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    for i in range(6):
                        T,SS,NE,NQ,e,q,cycle,circle=EA(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i+9,-i-9)
                        if T>keep or T>=CDQ2*NQ+q or T>=t1:
                            break
                        else:
                            if i == 5:
                                T+=0.58
                else:
                    if T>=CDQ1*NQ+q:
                        T,SS,NE,NQ,e,q,cycle,circle=QQ1(T,CDQ1,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                        break
                    if T>=CDE*NE+e:
                        break
                    for i in range(5):
                        T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                        if T>=CDE*NE+e or T>=CDQ1*NQ+q or T>=t1:
                            break
                        else:
                            if i == 4:
                                T+=0.58
                    
    '-----------------------------------------------------------------------------------------------------------------------------------'
    if relicnom(name,'屁斜剑法猫耳刻晴'):
        def EE1(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('自然','被击','满层','战技')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print('刻晴用E1，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[5],'消耗时间：',skill[-6])'''
            T+=skill[-6]
            return T,SS,NE,NQ,e,q,cycle,circle

        def EE2(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('自然','被击','满层','战技')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[6]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            '''print('刻晴用E2，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[6],'消耗时间：',skill[-7])'''
            T+=skill[-7]
            return T,SS,NE,NQ,e,q,cycle,circle

        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('自然','被击','满层','爆发')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[8]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[8])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('刻晴用Q，时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[8],'消耗时间：',skill[-8])'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle


        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[1]+=s
            '''print('刻晴用A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle


        def heavyattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=2;ele=0
            text=('自然','被击','满层','重击')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            D=calcul(a,b,c,ele,N)
            s=skill[4]/100*D
            SS[2]+=s
            '''print('刻晴用H，时间轴：',T,'元素属性',ele,'s=',s,'输出方式为',N,'D=',D,'倍率=',skill[4],'消耗时间：',skill[-5])'''
            T+=1/((1/skill[-5])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[7]
        CDQ=skill[9]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE1(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    T,SS,NE,NQ,e,q,cycle,circle=EE2(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(2):
                    if T>=t1:
                        break
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                    break
                T,SS,NE,NQ,e,q,cycle,circle=heavyattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                if T>=CDE*NE+e or T>=CDQ*NQ+q or T>=t1:
                        break
                T+=0.3

                                

    
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'卢姥爷卢锅巴卢老爷正义人暗夜英雄迪卢克'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=3;ele=data[14]
            text=('自然','被击','满层','战技')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[ea]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            if ea==4:
                NE=T//CDE
                e=T%CDE
                NE+=1*(1-min(b[-2],100)/100)
                if b[-3]!=0:
                    '冷却重置触发'
                    NQ-=min(b[-3],100)/100
                q-=b[-5]
                e-=b[-4]
            '''print('卢姥爷用E',ea-3,'时间轴：',T,'元素属性',ele,'s=',s,'输出方式为',N,'D=',D,'倍率=',skill[ea],'消耗时间：',skill[tea])'''
            T+=skill[tea]
            return T,SS,NE,NQ,e,q,cycle,circle

        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('自然','被击','满层','爆发')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[8]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[5])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print('卢姥爷用Q时间轴：',T,'元素属性',ele,'s=',s,'输出方式为',N,'D=',D,'倍率=',skill[8],'消耗时间：',skill[-8])'''
            T+=skill[-8]
            return T,SS,NE,NQ,e,q,cycle,circle


        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('卢姥爷用1，时间轴：',T)'''
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[1]+=s
            '''print('卢姥爷用平A',ea+1,'时间轴：',T,'元素属性',ele,'s=',s,'输出方式为',N,'D=',D,'倍率=',skill[ea],'消耗时间：',1/((1/skill[tea])*(1+b[-1]/100)))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle

        
        CDE=skill[7]
        CDQ=skill[9]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                break
            for j in range(5):
                if T>=t1:
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDE*NE+e:
                    for j in range(3):
                        T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,j+4,-j-5)
                        if T>=t1 or T>=CDQ*NQ+q:
                            break
                        for i in range(4):
                            T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                            if T>=t1 or T>=CDQ*NQ+q or T>=CDE*NE+e:
                                break




    
    '雷泽循环++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'喂不饱的狼雷泽'):
        def EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('自然','被击','满层','战技')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            '''print(N,ele,data[14],int(-ele-1))'''
            D=calcul(a,b,c,ele,N)
            s=(skill[3]/100)*D
            SS[3]+=s
            '''print(CDE)
            print('NE=',NE,'冷却时间结束点：',NE*CDE+e,e)'''
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            if b[-3]!=0:
                '冷却重置触发'
                NQ-=min(b[-3],100)/100
            q-=b[-5]
            e-=b[-4]
            '''print(name,'用E，     时间轴：',round(T,2),'--元素属性',eleinfo(ele),'--本次伤害=',round(s,2),'--输出方式为',attackinfo(N),'--本次输出期望面板=',round(D,2),'--倍率=',skill[3],'--消耗时间：',round(skill[-4],2))'''
            T+=skill[-4]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('自然','被击','满层','爆发')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[5]/100)*D
            '''print('s=',s,'D=',D,'倍率=',skill[5])'''
            SS[4]+=s
            if b[-2]!=0:
                '冷却重置触发'
                NE-=min(b[-2],100)/100
            '''print('NQ=',NQ,q)'''
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            e-=b[-4]
            q-=b[-5]
            '''print(name,'用Q，    时间轴：',round(T,2),'--元素属性',eleinfo(ele),'--本次伤害=',round(s,2),'--输出方式为',attackinfo(N),'--本次输出期望面板=',round(D,2),'--倍率=',skill[5],'--消耗时间：',round(skill[-5],2))'''
            T+=skill[-5]
            return T,SS,NE,NQ,e,q,cycle,circle


        
        def normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,ea,tea):
            N=1;ele=0
            text=('自然','被击','满层','普通')
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            if C!=-1:
                ele=C
            '''print('元素附魔：',C)'''
            D=calcul(a,b,c,ele,N)
            s=skill[ea]/100*D
            SS[1]+=s
            '''print(name,'用平A',ea+1,'时间轴：',round(T,2),'--元素属性',eleinfo(ele),'--本次伤害=',round(s,2),'--输出方式为',attackinfo(N),'--本次输出期望面板=',round(D,2),'--倍率=',skill[ea],'--消耗时间：',round(1/((1/skill[tea])*(1+b[-1]/100)),2))'''
            T+=1/((1/skill[tea])*(1+b[-1]/100))
            NE-=min(b[-2],100)/100
            NQ-=min(b[-3],100)/100
            e-=b[-4]
            q-=b[-5]
            return T,SS,NE,NQ,e,q,cycle,circle
        
        CDE=skill[4]
        CDQ=skill[6]
        '输出循环'
        for i in range(50000):
            if T>=t1:
                    break
            for j in range(5):
                if T>=CDE*NE+e:
                    T,SS,NE,NQ,e,q,cycle,circle=EE(T,CDE,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDQ*NQ+q and T-CDE*NE-e<-0.5:
                    T,SS,NE,NQ,e,q,cycle,circle=QQ(T,CDQ,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                for i in range(3):
                    T,SS,NE,NQ,e,q,cycle,circle=normalattack(T,SS,skill,NE,NQ,e,q,data,attackdetail,debuff,RR,cycle,circle,i,-i-1)
                    if T>=t1 or T>=CDQ*NQ+q or T>=CDE*NE+e:
                        break
                    if i==2:
                        T+=0.58

    '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
    if relicnom(name,'天权星凝光'):
        def EE(T,CDE,SS,skill,NE,e,data,attackdetail,debuff,RR,cycle,circle):
            N=3;ele=data[14]
            text=('自然','被击','满层','战技')
            '''print('凝光用E，时间轴：',T)'''
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[2]/100)*D
            '''print('E=',s)'''
            SS[3]+=s
            NE=T//CDE
            e=T%CDE
            NE+=1*(1-min(b[-2],100)/100)
            T+=skill[-3]
            return T,SS,NE,e,cycle,circle
        
        def QQ(T,CDQ,SS,skill,NQ,q,data,attackdetail,debuff,RR,cycle,circle):
            N=4;ele=data[14]
            text=('自然','被击','满层','爆发')
            '''print('凝光用Q，时间轴：',T)'''
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=(skill[4]*12/100)*D
            '''print('Q=',s)'''
            SS[4]+=s
            NQ=T//CDQ
            q=T%CDQ
            NQ+=(1-min(b[-3],100)/100)
            T+=skill[-4]
            return T,SS,NQ,q,cycle,circle
        
        def heavyattack(T,SS,skill,data,attackdetail,debuff,RR,cycle,circle):
            N=2;ele=data[14]
            text=('自然','被击','满层','重击')
            '''print('凝光用B，时间轴：',T)'''
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[1]/100*D
            SS[2]+=s
            T+=skill[-2]
            return T,SS,cycle,circle
        
        def normalattack(T,SS,skill,data,attackdetail,debuff,RR,cycle,circle):
            N=1;ele=data[14]
            text=('自然','被击','满层','普通')
            '''print('凝光用A，时间轴：',T)'''
            T,SS,C,a,b,c,cycle,circle=ensemble(data,attackdetail,debuff,RR,T,cycle,circle,text,SS,skill)
            D=calcul(a,b,c,ele,N)
            s=skill[0]/100*D
            SS[1]+=s
            T+=1/(((1/skill[-1])*(1+b[-1]/100)))
            return T,SS,cycle,circle
        
        CDE=skill[3]
        CDQ=skill[5]
        '输出循环'
        for i in range(1000):
            if T>=t1:
                break
            for j in range(3):
                if T>=CDE*NE+e:
                    T,SS,NE,e,cycle,circle=EE(T,CDE,SS,skill,NE,e,data,attackdetail,debuff,RR,cycle,circle)
                    break
                if T>=CDQ*NQ+q:
                    T,SS,NQ,q,cycle,circle=QQ(T,CDQ,SS,skill,NQ,q,data,attackdetail,debuff,RR,cycle,circle)
                    break
                T,SS,cycle,circle=heavyattack(T,SS,skill,data,attackdetail,debuff,RR,cycle,circle)
                if T>=t1:
                    break
                T,SS,cycle,circle=normalattack(T,SS,skill,data,attackdetail,debuff,RR,cycle,circle)
                if T>=t1:
                    break
    for i in range(5):
        S+=SS[i]
    dps=(S,S/t1)
    resultat=(format(SS[1]/S,'.2%'),format(SS[2]/S,'.2%'),format(SS[3]/S,'.2%'),format(SS[4]/S,'.2%'),format(SS[0]/S,'.2%'))
    word=('平A伤害','重击伤害','E伤害','Q伤害','特效伤害')
    return dps,resultat,word
            
def carry1(data,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill,lol):
    BA=data[1];SA=data[2];AR=data[3];BD=[4];SD=data[5];DR=data[6];BH=data[7];SH=data[8];HR=data[9];C=data[10];CD=data[11];EM=data[12];EF=data[13];ele=data[14];ALLD=data[0];
    if relicnom(name,'莫娜'):
        data[int(-1-data[14])]+=data[13]/5
        print('莫娜天赋提供水元素伤害加成:',format(EF/100,'.2%'))
    'lol为0用物理杯，lol为1用元素杯子'
    if lol==0:
        ED=data[-1]
    else:
        ED=data[int(-1-data[14])]
    data1=data.copy()
    EFD=0
    NN=0
    RAR0=AR
    RC0=C
    RCD0=CD
    RED0=ED
    S=0
    key=np.matrix([[2.5,3.3,4.1],[2.8,3.7,4.7],[3.2,4.2,5.3],[3.5,4.7,5.8]])
    MAX=np.zeros(6)
    if Relics<=3:
        Relics=3
        ARR4=23.1
        SH+=1893
        N=1
    if Relics==4:
        Relics=4
        ARR4=34.8
        SH+=3571
        N=3
    if Relics>=5:
        Relics=5
        ARR4=46.6
        SH+=4780
        N=5
    AR=AR+ARR4
    cle=key[luck-1,Relics-3]
    NA=4
    NC=5
    NCD=5
    SA0=3*cle/6.3*21
    combo=[0,0,0]
    for beizi in range(2):
        if beizi==0:
            AR5=ARR4;NAb=1
            ED5=0
        if beizi==1:
            AR5=0;NAb=0
            if lol==0:
                ED5=ARR4/6.3*7.9
            else:
                ED5=ARR4
                '''if ED5!=0:
                    print(ED5)'''
        for tou in range(3):
            if tou==0:
                C5=ARR4/6.3*4.2;Ct=1
                CD5=0;CDt=0
                AR6=0;NAt=0
                '''print('副词缀暴击率：',C5)'''
            if tou==1:
                C5=0;Ct=0
                CD5=ARR4/6.3*8.4;CDt=1
                AR6=0;NAt=0
            if tou==2:
                C5=0;Ct=0
                CD5=0;CDt=0
                AR6=ARR4;NAt=1
            ARmax=cle*N*(NA-NAt-NAb)
            AR0=cle*(NA-NAt-NAb)
            C0=cle/6.3*4.2*(NC-Ct)
            Cmax=N*cle/6.3*4.2*(NC-Ct)
            CD0=cle/6.3*8.4*(NCD-CDt)
            CDmax=N*cle/6.3*8.4*(NCD-CDt)
            ARL=np.linspace(AR+AR5+AR6+AR0,AR+AR5+AR6+AR0+ARmax,5*N)
            for i in range(5*N):
                C2=Cmax-(ARL[i]-AR-AR5-AR6-AR)/6.3*4.2
                if C2>=95-C-C5-C0:
                    C2=95-C-C5-C0
                CL=np.linspace(5+C+C5+C0,5+C+C5+C0+C2,5*N-i)
                for j in range(5*N-i):
                    CD2=CDmax-(ARL[i]-AR-AR5-AR6-AR0)/6.3*8.4-(CL[j]-5-C-C5-C0)/4.2*8.4
                    CD3=50+CD+CD5+CD0+CD2
                    '数据再度打包，'
                    if lol==0:
                        data1[-1]=ED+ED5
                    else:
                        data1[int(-1-data[14])]=ED+ED5
                    '''if data1[int(-1-data[14])]!=21.6:
                        print(data1[int(-1-data[14])])'''
                    data1[2]=SA+SA0;data1[3]=ARL[i];data1[10]=CL[j];data1[11]=CD3;data1[8]=SH
                    dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
                    '''AA=BA*(1+ARL[i]/100)+SA+SA0;BB=1+(CL[j]/100)*(CD3/100);CC=1+(ED+ED5)/100
                    S1=AA*BB*CC'''
                    NN+=1
                    if dps[0]>S:
                        S=dps[0]
                        '''print('第',NN,'次穷举：',int(dps[0]),int(dps[1]))'''
                        datafinal=data1.copy()
                        Final=[]
                        for i in range(np.size(resultat)):
                            Final.append(resultat[i])
                        '''MAX[0]=round(AA,2)
                        MAX[1]=round(S,2)'''
                        MAX[0]=round(dps[0],2)
                        MAX[1]=round(dps[1],2)                      
                        MAX[2]=round(ARL[i],2)
                        MAX[3]=round(CL[j],2)
                        MAX[4]=round(CD3,2)
                        MAX[5]=round(ED+ED5,2)
                        combo[1]=beizi
                        combo[2]=tou

    LL=''

    if combo[0]==0:
        LL+='++沙漏选择 攻击力百分比 '
        LL+=str(format(ARR4/100,'.2%'))
        RAR0+=ARR4
    if combo[2]==0:
        LL+='++理之冠选择 暴击率 '
        LL+=str(format(ARR4/6.3*4.2/100,'.2%'))
        RC0+=ARR4/6.3*4.2
    if combo[2]==1:
        LL+='++理之冠选择 暴击伤害 '
        LL+=str(format(ARR4/6.3*8.4/100,'.2%'))
        RCD0+=ARR4/6.3*8.4
    if combo[2]==2:
        LL+='++理之冠选择 攻击力百分比 '
        LL+=str(format(ARR4/100,'.2%'))
        RAR0+=ARR4
    if combo[1]==0:
        LL+='++杯子选择 攻击力百分比 '
        LL+=str(format(ARR4/100,'.2%'))
        RAR0+=ARR4
    if combo[1]==1:
        if lol==0:
            LL+='++杯子选择 物理伤害 '
            RED0+=ARR4/6.3*7.9
            LL+=str(format(ARR4*7.9/6.3/100,'.2%'))
        else:
            LL+='++杯子选择 元素伤害 '
            RED0+=ARR4
            LL+=str(format(ARR4/100,'.2%'))
    RC1=round(MAX[3]-RC0-5,2)
    RCD1=round(MAX[4]-RCD0-50,2)
    RAR1=round(MAX[2]-RAR0,2)
    RED1=round(MAX[5]-RED0,2)
    LL+='++++'

    print('\n—————————全身',Relics,'星圣遗物—————————')
    FRelics(luck)
    print(LL)
    print('-----圣遗物副词缀提供属性为：攻击力百分比 ',format(RAR1/100,'.2%'),'   暴击率 ',format(RC1/100,'.2%'),'   暴击伤害 ',format(RCD1/100,'.2%'),'-----\n')
    rapport=''
    for i in range(5):
        rapport+=word[i]+':'+Final[i]+'。  '
    print('\n——————',t1,'秒内总输出:',MAX[0],'————DPS:',MAX[1],'——————\n伤害构成:',rapport,'\n')
    print('人物最终面板数据：\n攻击力:',format(MAX[2]/100,'.2%'),'    暴击率:',format(MAX[3]/100,'.2%'),'    暴击伤害:',format(MAX[4]/100,'.2%'),'    元素伤害:',format(MAX[5]/100,'.2%'))
    print('穷举次数：',NN)
    return MAX,datafinal,rapport

def carry2(data,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill):
    lol=1
    BA=data[1];SA=data[2];AR=data[3];BD=[4];SD=data[5];DR=data[6];BH=data[7];SH=data[8];HR=data[9];C=data[10];CD=data[11];EM=data[12];EF=data[13];ele=data[14];ALLD=data[0]
    ED=data[int(-1-data[14])]
    data1=data.copy()
    EFD=0
    NN=0
    RDR0=DR
    RC0=C
    RCD0=CD
    RED0=ED
    S=0
    key=np.matrix([[2.5,3.3,4.1],[2.8,3.7,4.7],[3.2,4.2,5.3],[3.5,4.7,5.8]])
    MAX=np.zeros(6)
    if Relics<=3:
        Relics=3
        ARR4=23.1
        SH+=1893
        N=1
    if Relics==4:
        Relics=4
        ARR4=34.8
        SH+=3571
        N=3
    if Relics>=5:
        Relics=5
        ARR4=46.6
        SH+=4780
        N=5
    DR=DR+ARR4/6.3*7.9
    cle=key[luck-1,Relics-3]
    NA=4
    NC=5
    NCD=5
    SD0=4*cle/6.3*23
    combo=[0,0,0]
    for beizi in range(2):
        if beizi==0:
            DR5=ARR4/6.3*7.9;NAb=1
            ED5=0
        if beizi==1:
            DR5=0;NAb=0
            ED5=ARR4
        for tou in range(3):
            if tou==0:
                C5=ARR4/6.3*4.2;Ct=1
                CD5=0;CDt=0
                DR6=0;NAt=0
            if tou==1:
                C5=0;Ct=0
                CD5=ARR4/6.3*8.4;CDt=1
                DR6=0;NAt=0
            if tou==2:
                C5=0;Ct=0
                CD5=0;CDt=0
                DR6=ARR4/6.3*7.9;NAt=1
            DRmax=cle/6.3*7.9*N*(NA-NAt-NAb)
            DR0=cle*(NA-NAt-NAb)
            C0=cle/6.3*4.2*(NC-Ct)
            Cmax=N*cle/6.3*4.2*(NC-Ct)
            CD0=cle/6.3*8.4*(NCD-CDt)
            CDmax=N*cle/6.3*8.4*(NCD-CDt)
            DRL=np.linspace(DR+DR5+DR6+DR0,DR+DR5+DR6+DR0+DRmax,5*N)
            for i in range(5*N):
                C2=Cmax-(DRL[i]-DR-DR5-DR6-DR)/7.9*4.2
                if C2>=95-C-C5-C0:
                    C2=95-C-C5-C0
                CL=np.linspace(5+C+C5+C0,5+C+C5+C0+C2,5*N-i)
                for j in range(5*N-i):
                    CD2=CDmax-(DRL[i]-DR-DR5-DR6-DR0)/7.9*8.4-(CL[j]-5-C-C5-C0)/4.2*8.4
                    CD3=50+CD+CD5+CD0+CD2
                    '数据再度打包，'
                    data1[int(-1-data[14])]=ED+ED5
                    '''if data1[int(-1-data[14])]!=21.6:
                        print(data1[int(-1-data[14])])'''
                    data1[5]=SD+SD0;data1[6]=DRL[i];data1[10]=CL[j];data1[11]=CD3;data1[8]=SH
                    dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
                    '''AA=BA*(1+ARL[i]/100)+SA+SA0;BB=1+(CL[j]/100)*(CD3/100);CC=1+(ED+ED5)/100
                    S1=AA*BB*CC'''
                    NN+=1
                    if dps[0]>S:
                        S=dps[0]
                        '''print('第',NN,'次穷举：',int(dps[0]),int(dps[1]))'''
                        datafinal=data1.copy()
                        Final=[]
                        for i in range(np.size(resultat)):
                            Final.append(resultat[i])
                        '''MAX[0]=round(AA,2)
                        MAX[1]=round(S,2)'''
                        MAX[0]=round(dps[0],2)
                        MAX[1]=round(dps[1],2)                      
                        MAX[2]=round(DRL[i],2)
                        MAX[3]=round(CL[j],2)
                        MAX[4]=round(CD3,2)
                        MAX[5]=round(ED+ED5,2)
                        combo[1]=beizi
                        combo[2]=tou

    LL=''

    if combo[0]==0:
        LL+='++沙漏选择 防御力百分比 '
        LL+=str(format(ARR4/6.3*7.9/100,'.2%'))
        RDR0+=ARR4/6.3*7.9
    if combo[2]==0:
        LL+='++理之冠选择 暴击率 '
        LL+=str(format(ARR4/6.3*4.2/100,'.2%'))
        RC0+=ARR4/6.3*4.2
    if combo[2]==1:
        LL+='++理之冠选择 暴击伤害 '
        LL+=str(format(ARR4/6.3*8.4/100,'.2%'))
        RCD0+=ARR4/6.3*8.4
    if combo[2]==2:
        LL+='++理之冠选择 防御力百分比 '
        LL+=str(format(ARR4/6.3*7.9/100,'.2%'))
        RDR0+=ARR4/6.3*7.9
    if combo[1]==0:
        LL+='++杯子选择 防御力百分比 '
        LL+=str(format(ARR4/6.3*7.9/100,'.2%'))
        RDR0+=ARR4/6.3*7.9
    if combo[1]==1:
        if lol==0:
            LL+='++杯子选择 物理伤害 '
            RED0+=ARR4/6.3*7.9
            LL+=str(format(ARR4*7.9/6.3/100,'.2%'))
        else:
            LL+='++杯子选择 元素伤害 '
            RED0+=ARR4
            LL+=str(format(ARR4/100,'.2%'))
    RC1=round(MAX[3]-RC0-5,2)
    RCD1=round(MAX[4]-RCD0-50,2)
    RAR1=round(MAX[2]-RDR0,2)
    RED1=round(MAX[5]-RED0,2)
    LL+='++++'

    print('\n—————————全身',Relics,'星圣遗物—————————')
    FRelics(luck)
    print(LL)
    print('-----圣遗物副词缀提供属性为：防御力百分比 ',format(RAR1/100,'.2%'),'   暴击率 ',format(RC1/100,'.2%'),'   暴击伤害 ',format(RCD1/100,'.2%'),'-----\n')
    rapport=''
    for i in range(5):
        rapport+=word[i]+':'+Final[i]+'。  '
    print('\n——————',t1,'秒内总输出:',MAX[0],'————DPS:',MAX[1],'——————\n伤害构成:',rapport,'\n')
    print('人物最终面板数据：\n防御力:',format(MAX[2]/100,'.2%'),'    暴击率:',format(MAX[3]/100,'.2%'),'    暴击伤害:',format(MAX[4]/100,'.2%'),'    元素伤害:',format(MAX[5]/100,'.2%'))
    print('穷举次数：',NN)
    return MAX,datafinal,rapport

def FRelics(luck):
    if luck<=0:
        luck=0
    if luck>=4:
        luck=4
    if luck>=0 and luck<=1:
        print('非洲人级副词缀————所有副词缀档位为',luck)
    if luck>1 and luck<=2:
        print('正常人级副词缀————所有副词缀档位为',luck)
    if luck>2 and luck<=3:
        print('欧皇或肝帝级副词缀——所有副词缀档位为',luck)
    if luck>3 and luck<=4:
        print('透支阳寿级副词缀———所有副词缀档位',luck)
    return luck

def food(MAX,datafinal,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill):
    if np.size(MAX)==7:
        if not relicnom(name,'女仆诺艾尔'):
            EM=MAX[6]
            EMD=(0.00000005*EM*EM*EM-0.0001*EM*EM+0.1966*EM+0.0382)
    for i in range(2):
        if i==0:
            data1=datafinal.copy()
            data1[10]+=12
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('----------------------单药省钱----------------------')
            print('只吃  满足沙拉  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[2]+=228
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('只吃  轻策农家菜  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[10]+=20
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('只吃  堆高高  提升为:',format(dps[0]/MAX[0]-1,'.2%'))
            
            data1=datafinal.copy()
            data1[10]+=10
            data1[2]+=320
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('只吃  翡玉什锦袋  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[10]+=12
            data1[2]+=370
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('只吃  仙跳墙  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

        if i ==1 :
            if relicnom(name,'喂不饱的狼雷泽'):
                data1=datafinal.copy()
                data1[-1]+=55
                dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
                print('雷泽只吃  冷肉拼盘  提升为:',format(dps[0]/MAX[0]-1,'.2%'),'。\n雷泽吃雷元素药剂和 其他食物')
            for j in range(-8,-1):
                datafinal[j]+=25

            data1=datafinal.copy()
            data1[10]+=12
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('   ')
            print('++++++++++++++双药拉满++++++++++++++')
            print('吃元素药剂和  满足沙拉  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[2]+=228
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('吃元素药剂和  轻策农家菜  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[10]+=20
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('吃元素药剂和  堆高高  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[10]+=10
            data1[2]+=320
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('吃元素药剂和  翡玉什锦袋  提升为:',format(dps[0]/MAX[0]-1,'.2%'))

            data1=datafinal.copy()
            data1[10]+=12
            data1[2]+=370
            dps,resultat,word=pourcentage(data1,attackdetail,debuff,t1,name,life,skill,RR)
            print('吃元素药剂和  仙跳墙  提升为:',format(dps[0]/MAX[0]-1,'.2%'))
    return

def simulation(level,name,life,weapon,refine,Relics,luck,T1,T2,t1,lol):
    Relics=int(Relics)
    luck=int(luck)
    print('....................减抗，减防，元素充能收益等暂不计入.................\n..........部分特效如正反斩杀增伤，增加暴击率等会转化为期望加成.........')
    data,datatext,attackdetail,attacktext,debuff,debufftext,skill,RR=plus(level,name,life,weapon,refine,Relics,luck,T1,T2)
    if not relicnom(name,'女仆诺艾尔'):
        MAX,datafinal,rapport=carry1(data,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill,lol)
        food(MAX,datafinal,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill)
        print('                                             ')
        print('    ')
    if relicnom(name,'女仆诺艾尔'):
        MAX,datafinal,rapport=carry2(data,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill)
        food(MAX,datafinal,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill)
    return 

def simulation1(level,name,life,weapon,refine,Relics,luck,T1,T2,t1,lol):
    Relics=int(Relics)
    luck=int(luck)
    print('....................减抗，减防，元素充能收益等暂不计入.................\n..........部分特效如正反斩杀增伤，增加暴击率等会转化为期望加成.........')
    data,datatext,attackdetail,attacktext,debuff,debufftext,skill,RR=plus(level,name,life,weapon,refine,Relics,luck,T1,T2)
    if not relicnom(name,'女仆诺艾尔'):
        MAX,datafinal,rapport=carry1(data,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill,lol)
        food(MAX,datafinal,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill)
        print('                                             ')
        print('    ')
    if relicnom(name,'女仆诺艾尔'):
        MAX,datafinal,rapport=carry2(data,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill)
        food(MAX,datafinal,attackdetail,debuff,RR,t1,name,life,Relics,luck,skill)
    return MAX,datafinal,rapport


'''N=22
namelist=('迪卢克','可莉','安柏','班尼特','香菱','莫娜','公子','行秋','琴','温迪','风主','岩主','砂糖','刻晴','北斗','丽莎','雷泽','皇女','凯亚','重云','诺艾尔','凝光')
weaponlist=('狼末','四风','之翼','风鹰剑','昆吾','四风','之翼','风鹰','风鹰','之翼','风鹰','风鹰','四风','风鹰','狼末','四风','狼末','之翼','风鹰','狼末','狼末','四风')
reliclist1=('魔女','魔女','魔女','魔女','渡火','征涛','征涛','征涛','翠绿','翠绿','翠绿','悠古','翠绿','平雷','平雷','平雷','平雷','平雷','冰风','冰风','角斗士','悠古')
reliclist2=('魔女','魔女','魔女','魔女','渡火','征涛','昔日','昔日','角斗士','角斗士','角斗士','角斗士','角斗士','平雷','平雷','平雷','平雷','平雷','冰风','冰风','角斗士','角斗士')

print(np.size(namelist))
print(np.size(weaponlist))
print(np.size(reliclist1))
print(np.size(reliclist2))

G=np.ones((8,np.size(namelist)))
for i in range(np.size(namelist)):
    G[0,i]=i
    K=[]
    K.append(namelist[i]);K.append(weaponlist[i]);K.append(reliclist1[i]);K.append(reliclist2[i]);
    with open('C:\\Users\\Administrator\\Desktop\\原神工具\\Detail of Rapport.txt','a',encoding='utf-8') as f:
        f.write(str(K)+'\n')
    for j in range(7):
        K=[]
        MAX,datafinal,rapport=simulation1(80,namelist[i],j,weaponlist[i],1,5,4,reliclist1[i],reliclist2[i],180,1)
        if j==0:
            G[1,i]=round(MAX[1],2)
        if  1<=j<=6:
            G[1+j,i]=round(MAX[1]/G[1,i]-1,4)
            if j==6:
                G[1,i]=round(MAX[1],2)
        L1=str(j)+'命'
        K.append(L1)
        K.append(rapport)
        with open('C:\\Users\\Administrator\\Desktop\\原神工具\\Detail of Rapport.txt','a',encoding='utf-8') as f:
             f.write(str(K)+'\n')

for i in range(np.size(namelist)-1):
    for j in range(np.size(namelist)-1-i):
        if G[1,j]>G[1,j+1]:
            for k in range(8):
                G[k,j],G[k,j+1]=G[k,j+1],G[k,j]
NAME=[]
'np.size(namelist)'
for i in range(np.size(namelist)):
    NAME.append(namelist[int(G[0,i])]+'    ')
with open('C:\\Users\\Administrator\\Desktop\\原神工具\\Rapport.txt','a',encoding='utf-8') as f:
    f.write(str(NAME)+'\n')
    for i in range (len (G)): 
         f.write(str(G[i])+'\n')'''





